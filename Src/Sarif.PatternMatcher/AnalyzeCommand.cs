// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;

using Microsoft.CodeAnalysis.Sarif.Driver;
using Microsoft.CodeAnalysis.Sarif.Writers;
using Microsoft.RE2.Managed;

using Newtonsoft.Json;

namespace Microsoft.CodeAnalysis.Sarif.PatternMatcher
{
    public class AnalyzeCommand : MultithreadedAnalyzeCommandBase<AnalyzeContext, AnalyzeOptions>
    {
        //private static readonly string monsterRegex = @"(?:(?:[^x]|^)(?P<fpg0>xox(?P<type>p|b|a|o|r|s)-[0-9A-Za-z\-]+))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg9>ghp_[\w]{36})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg22>AKIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg31>LTAI([0-9A-Za-z]{12}|[0-9A-Za-z]{20}))(?:[^0-9A-Za-z]|$))|(?:(?:[^o]|^)(?P<fpg36>oy2[a-p][0-9a-z]{15}[aq][0-9a-z]{11}[eu][bdfhjlnprtvxz357][a-p][0-9a-z]{11}[aeimquy4])(?:[^aeimquy4]|$))|(?:(?i)server\s*=\s*(tcp:)?(?P<fpg48>[^,;""'=|\(\)\]\[><\s]+)(?:[,;""'=|\(\)\]\[><\s]|$))|(?:(?i)(?:user|user id|uid)\s*=\s*(?P<fpg58>[^,;""'=|&\]\[><\s]+)(?:[,;""'=|&\]\[><\s]|$))|(?:(?i)port\s*=\s*(?P<fpg65>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg72>[^;""<'\s]{8,128})(?:[;""<'\s]|$))|(?:(?i)database\s*=\s*(?P<fpg82>[^,;""'=|&\]\[><\s]{8,128})(?:[,;""'=|&\]\[><\s]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg90>shpat_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg99>shpss_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg108>PMAK-[a-f0-9]{24}-[a-f0-9]{34})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^n])(?P<fpg117>npm_[0-9a-zA-Z]{30}[\w]{6})(?:[^\w]|$))|(?:(?:^|[^2-7a-z])(?P<fpg126>[2-7a-z]{52})(?:[^2-7a-z]|$))|(?:(?i)(?:^|[^0-9a-z-])(?P<fpg136>[0-9a-z-]+)\.redis\.cache\.windows\.net(?:\b|$))|(?:(?i)password\s*=\s*(?P<fpg144>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)https:\/\/(?P<fpg154>[0-9a-z][0-9a-z-]{1,42}[0-9a-z])\.documents\.azure\.com:443(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg162>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)SharedAccessKeyName\s*=\s*(?P<fpg175>[\w]+))|(?:(?i)SharedAccessKey\s*=\s*(?P<fpg180>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*sb:\/\/(?P<fpg190>.{6,50})\.(?P<fpg192>servicebus\.[\w\.]+?)[^\w\.])|(?:(?i)(?:^|[^0-9a-z])(?P<fpg199>[0-9a-z]+)\.(?P<fpg203>(?:blob|file|table|queue)\.core\.windows\.net)(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg207>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)AccountName\s*=\s*(?P<fpg217>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?i)AccountKey\s*=\s*(?P<fpg225>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)EndpointSuffix\s*=\s*(?P<fpg239>[a-z\.]+)(?:[^a-z\.]|$))|(?:(?i)(?:xstore.{0,100})[^<]*?account.{0,30}?[>""](?P<fpg244>[0-9a-z]+)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?key.{0,30}?[>""](?P<fpg252>[0-9a-z\/+]{86}==)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?uri.{0,30}?[>""](?P<fpg266>[a-z\.]+)[<""])|(?:(?is)#(?P<fpg270>[0-9a-z\/+]{86}==))|(?:(?is)(?:true|false)#(?P<fpg280>[a-z]{2,24})#)|(?:(?is)--account-name\s+(?P<fpg289>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?is)--account-key\s+(?P<fpg297>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?:^|[^0-9a-f\-])(?P<fpg306>dapi[0-9a-f\-]{32,34})(?:[^0-9a-f\-]|$))|(?:(?i)(?:^|[^0-9a-z\-])(?P<fpg316>[0-9a-z\-]+)\.azurewebsites\.net(?P<fpg321>\/[^\?""'`<\]\r\n\s\)]+)?)|(?:(?i)Id\s*=\s*(?P<fpg328>[^;]{31})(?:;|$))|(?:(?i)Secret\s*=\s*(?P<fpg333>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*https:\/\/(?P<fpg343>[0-9a-z\-]{5,50})\.azconfig\.io(?:\b|$))|(?:(?:^|[^0-9a-zA-Z\.])(?i)(?:[0-9a-z\.]+\.office.com)\/webhook(?:b2)?\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})@(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})\/IncomingWebhook\/(?P<fpg351>[0-9a-f]{12}[1-5][0-9a-f]{3}[89ab][0-9a-f]{15})\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})(?:[^0-9a-f]|$))|(?:(?i)(?P<fpg368>http|ftp|https):\/{2}(?P<fpg361>[0-9a-z]+)\.(?P<fpg363>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net)):?(?P<fpg362>[0-9]{2,5})?(?P<fpg366>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg367>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:BlobEndpoint|QueueEndpoint|FileEndpoint|TableEndpoint)(?:=|(?:""?\s*:\s*""))(?P<fpg377>https):\/\/(?P<fpg370>[0-9a-z]+)\.(?P<fpg372>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net))(?s)(?:.|\n){1,50}(?-s)SharedAccessSignature(?:=|(?:""?\s*:\s*""))(?P<fpg376>.{1,200}(?:dsas_secret|sig)=(?P<sas>[^#\)\(<>\r\n\s'""]+)))|(?:(?i)(?P<fpg386>http|ftp|https):\/{2}(?P<fpg381>[\w_.-]{1,200}\.logic\.azure\.com):?(?P<fpg380>[0-9]{2,5})?(?P<fpg384>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg385>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg395>http|ftp|https):\/{2}(?P<fpg390>[\w_.-]{1,200}\.azurewebsites\.net):?(?P<fpg389>[0-9]{2,3})?(?P<fpg393>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg394>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg404>http|ftp|https):\/{2}(?P<fpg399>[\w_.-]{1,200}(?:\.azureedge\.net|\.msecnd\.net)):?(?P<fpg398>[0-9]{2,5})?(?P<fpg402>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg403>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg405>[0-9A-Za-z/+]{76}\+ASt[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg414>[0-9A-Za-z]{33}AzCa[A-P][0-9A-Za-z]{5}=))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg423>[0-9a-zA-Z-_~.]{3}7Q~[0-9a-zA-Z-_~.]{31})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg432>[0-9a-zA-Z-_~.]{3}8Q~[0-9a-zA-Z-_~.]{34})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg441>[0-9A-Za-z_\-]{44}AzFu[0-9A-Za-z\-_]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg450>[0-9A-Za-z/+]{76}ACDb[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg459>[0-9A-Za-z+\/]{76}\+ABa[0-9A-Za-z+\/]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg468>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9A-Za-z])(?P<fpg477>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9a-zA-Z\/+])(?P<fpg486>[0-9a-zA-Z\/+]{76}\+AMC[0-9a-zA-Z\/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg495>[0-9A-Za-z+\/]{33}\+ASb[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ASb[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg504>[0-9A-Za-z+\/]{33}\+AEh[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+AEh[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg513>[0-9A-Za-z+\/]{33}\+ARm[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ARm[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg522>[A-Za-z0-9+\/]{42}\+ACR[A-D][A-Za-z0-9+\/]{5})(?:[^0-9a-z\/+=]|$))|(?:(?i)(?:user id|uid)\s*=\s*(?P<fpg535>[^;""<'\s]+)(?:[;""<'\s]|$))|(?:(?i)(?:server|data source)\s*=\s*(tcp:)?(?P<fpg543>[^;,""<'\s]+)(?:[;,""<'\s]|$))|(?:(?i),\s*(?P<fpg551>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg558>[A-Za-z0-9+\/]{42}\+SQL[A-D][A-Za-z0-9+\/]{5}))|(?:(?i)(?:initial catalog|database)\s*=\s*(?P<fpg568>[^;""<>*%&:\/?'\s]+)(?:[;""<>*%&:\/?'\s]|$))|(?:(?:^|[^0-9a-f\.-])(?P<fpg580>amzn1\.application-oa2-client\.[0-9a-f]{32})(?:[^0-9a-f\.-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg589>ASIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg598>GOOG1[A-Z2-7]{56})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg607>GOOG[A-Z2-7]{20})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg612>aio_[a-zA-Z]{4}[0-9]{2}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z/:])(?P<fpg621>1/[0-9]{14,16}:[a-f0-9]{32})(?:[^0-9A-Za-z/:]|$))|(?:(?:^|[^0-9A-Za-z/+~._\-%\\])(?P<fpg630>[0-9A-Za-z/+]{44})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg639>CLOJARS_[0-9a-f]{60})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg648>dvc_client_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg657>dvc_mobile_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg666>dvc_server_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg675>doo_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9a-f_])(?P<fpg684>dop_v[0-9]_[0-9a-f]{64})(?:[^0-9a-f_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg693>dor_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg702>dos_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_.])(?P<fpg711>[012345ADEIMNOQTUYcgjkwxyz]{23,28}\.[0-9A-Za-z-_]{6,7}\.[0-9A-Za-z-_]{27,})(?:[^0-9A-Za-z-_.]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg720>dp\.audit\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg729>dp\.ct\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg738>dp\.pt\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg747>dp\.scim\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg756>dp\.st\.(?:[a-z0-9-_]{2,35}\.)?[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-._])(?P<fpg765>sl\.[0-9A-Za-z\-_]{136,})(?:[^0-9A-Za-z-._]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg774>duffel_live_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg783>duffel_test_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg792>EZAK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg801>EZTK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg810>fig(d|((u|o)(r|h)?))_[0-9A-Za-z_-]{40})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg819>FLWSECK-[0-9a-f]{32}-X)(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z+/\-_])(?P<fpg828>[0-9A-Za-z+/]{56,}={0,2}/[0-9A-HJKMNP-TV-Z]{7})(?:[^0-9A-Za-z+/\-_=]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg837>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Fa-f])(?P<fpg846>v1\.[0-9A-Fa-f]{40})(?:[^0-9A-Fa-f]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg855>gho_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg864>ghr_[0-9A-Za-z]{76})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg873>ghs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg882>gh1_[0-9A-Za-z]{21}_[0-9A-Za-z]{59}|github_pat_[0-9][0-9A-Za-z]{21}_[0-9A-Za-z]{59})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg891>ghu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg900>eyJrIjoi[0-9A-Za-z]{70,}={0,2})(?:[^0-9A-Za-z=]|$))|(?:(?:^|[^0-9A-Za-z\-])(?P<fpg909>pat-[a-z]{2}[1-9]-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z\-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg918>dG9rO[0-9A-Za-z]{54}=)(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg927>ion_[0-9A-Za-z]{36}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg936>ion_[0-9A-Za-z]{48}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?i)(?:^|[^0-9a-z\.-])(?P<fpg948>[0-9a-z\.-]+\.jfrog\.io))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg954>lin_api_[0-9A-Za-z]{40})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg963>lin_oauth_[0-9A-Za-z]{64})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg972>lmb_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg981>lma_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg990>Mid-server-[0-9A-Za-z_-]{24})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg999>NRIQ-[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1008>NRAK-[A-Z0-9]{27})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1017>NRRA-[a-f0-9]{42})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg1026>api_live(?:_[a-z]{2})?\.[0-9A-Za-z_-]{11}\.[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z/+~_\-%\\])(?P<fpg1035>sk-(?:[0-9A-Za-z]{0,40}-)?[0-9A-Za-z]{20}T3BlbkFJ[0-9A-Za-z]{20})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1044>pscale_pw_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1053>pscale_oauth_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1062>pscale_tkn_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1071>pcs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1080>pcu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1089>PSK[0-9A-Fa-f]{256})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg1098>rdme_xn8s9h[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg1107>rpa_[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1116>samsara_api_[0-9A-Za-z]{30})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1125>gzUdQrDW:[0-9]+:[0-9A-Za-z_]+)(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1134>secret_scanning_ab85fc6f8d7638cf1c11da812da308d43_[0-9A-Za-z]{5})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1143>SG\.[0-9A-Za-z-_]{22}\.[0-9A-Za-z-_]{43})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1152>xkeysib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1161>xsmtpsib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg1170>shippo_live_[a-f0-9]{40})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1179>xapp-(?:\d)-(?:\w{10,15})-(?:\d{10,15})-(?:[0-9a-f]{60,70}))(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1188>(?:sk|sys)_live_(?:[0-9A-Za-z]{24}|[0-9A-Za-z]{34}|[0-9A-Za-z]{99,}))(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1197>AKID[0-9A-Za-z]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1206>tfp_[A-Za-z1-9]{40,50}_[A-Za-z1-9]{8,16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1215>wf[a-z]_[1-9]_[0-9A-Za-z]{38,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1224>sk_[0-9A-Za-z]{75})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg1233>y[0-6]_[-_0-9A-Za-z]{55})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-f])(?P<fpg1242>zpka_[0-9a-f]{32}_[0-9A-Fa-f]{8})(?:[^0-9a-f]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg1251>ct[0-9A-Za-z]{1,4}_[0-9A-Za-z]{30,}[0-9A-Za-z]{6})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg1260>hvs\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg1269>b\.AAAAAQ[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg1278>hvb\.AA[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg1287>s\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?P<fpg1296>hvs\.[0-9A-Za-z_\-]{91,})(?:[^0-9A-Za-z\._\-]|$))|(?:(?P<fpg1305>rk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg1314>sk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg1323>Ci[QR][A-Za-z0-9_-]{17}LT[QR][A-Za-z0-9_-]{77,87})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg1332>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1341>waka_sec_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1350>waka_tok_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg1359>waka_ref_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg1368>gcntfy-[a-z0-9\-_]{0,}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg1377>persona_production_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z_\-]|$))";

        //private static readonly string monsterRegexFirstHalf = @"(?:(?:[^x]|^)(?P<fpg0>xox(?P<fpg1>p|b|a|o|r|s)-[0-9A-Za-z\-]+))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg2>ghp_[\w]{36})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>AKIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>LTAI([0-9A-Za-z]{12}|[0-9A-Za-z]{20}))(?:[^0-9A-Za-z]|$))|(?:(?:[^o]|^)(?P<fpg5>oy2[a-p][0-9a-z]{15}[aq][0-9a-z]{11}[eu][bdfhjlnprtvxz357][a-p][0-9a-z]{11}[aeimquy4])(?:[^aeimquy4]|$))|(?:(?i)server\s*=\s*(tcp:)?(?P<fpg6>[^,;""'=|\(\)\]\[><\s]+)(?:[,;""'=|\(\)\]\[><\s]|$))|(?:(?i)(?:user|user id|uid)\s*=\s*(?P<fpg7>[^,;""'=|&\]\[><\s]+)(?:[,;""'=|&\]\[><\s]|$))|(?:(?i)port\s*=\s*(?P<fpg8>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg9>[^;""<'\s]{8,128})(?:[;""<'\s]|$))|(?:(?i)database\s*=\s*(?P<fpg10>[^,;""'=|&\]\[><\s]{8,128})(?:[,;""'=|&\]\[><\s]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>shpat_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>shpss_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg13>PMAK-[a-f0-9]{24}-[a-f0-9]{34})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^n])(?P<fpg14>npm_[0-9a-zA-Z]{30}[\w]{6})(?:[^\w]|$))|(?:(?:^|[^2-7a-z])(?P<fpg15>[2-7a-z]{52})(?:[^2-7a-z]|$))|(?:(?i)(?:^|[^0-9a-z-])(?P<fpg16>[0-9a-z-]+)\.redis\.cache\.windows\.net(?:\b|$))|(?:(?i)password\s*=\s*(?P<fpg17>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)https:\/\/(?P<fpg18>[0-9a-z][0-9a-z-]{1,42}[0-9a-z])\.documents\.azure\.com:443(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg19>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)SharedAccessKeyName\s*=\s*(?P<fpg20>[\w]+))|(?:(?i)SharedAccessKey\s*=\s*(?P<fpg21>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*sb:\/\/(?P<fpg22>.{6,50})\.(?P<fpg23>servicebus\.[\w\.]+?)[^\w\.])|(?:(?i)(?:^|[^0-9a-z])(?P<fpg24>[0-9a-z]+)\.(?P<fpg25>(?:blob|file|table|queue)\.core\.windows\.net)(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg26>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)AccountName\s*=\s*(?P<fpg27>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?i)AccountKey\s*=\s*(?P<fpg28>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)EndpointSuffix\s*=\s*(?P<fpg29>[a-z\.]+)(?:[^a-z\.]|$))|(?:(?i)(?:xstore.{0,100})[^<]*?account.{0,30}?[>""](?P<fpg30>[0-9a-z]+)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?key.{0,30}?[>""](?P<fpg31>[0-9a-z\/+]{86}==)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?uri.{0,30}?[>""](?P<fpg32>[a-z\.]+)[<""])|(?:(?is)#(?P<fpg33>[0-9a-z\/+]{86}==))|(?:(?is)(?:true|false)#(?P<fpg34>[a-z]{2,24})#)|(?:(?is)--account-name\s+(?P<fpg35>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?is)--account-key\s+(?P<fpg36>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?:^|[^0-9a-f\-])(?P<fpg37>dapi[0-9a-f\-]{32,34})(?:[^0-9a-f\-]|$))|(?:(?i)(?:^|[^0-9a-z\-])(?P<fpg38>[0-9a-z\-]+)\.azurewebsites\.net(?P<fpg39>\/[^\?""'`<\]\r\n\s\)]+)?)|(?:(?i)Id\s*=\s*(?P<fpg40>[^;]{31})(?:;|$))|(?:(?i)Secret\s*=\s*(?P<fpg41>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*https:\/\/(?P<fpg42>[0-9a-z\-]{5,50})\.azconfig\.io(?:\b|$))|(?:(?:^|[^0-9a-zA-Z\.])(?i)(?:[0-9a-z\.]+\.office.com)\/webhook(?:b2)?\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})@(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})\/IncomingWebhook\/(?P<fpg43>[0-9a-f]{12}[1-5][0-9a-f]{3}[89ab][0-9a-f]{15})\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})(?:[^0-9a-f]|$))|(?:(?i)(?P<fpg49>http|ftp|https):\/{2}(?P<fpg44>[0-9a-z]+)\.(?P<fpg46>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net)):?(?P<fpg45>[0-9]{2,5})?(?P<fpg47>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg48>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:BlobEndpoint|QueueEndpoint|FileEndpoint|TableEndpoint)(?:=|(?:""?\s*:\s*""))(?P<fpg53>https):\/\/(?P<fpg50>[0-9a-z]+)\.(?P<fpg51>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net))(?s)(?:.|\n){1,50}(?-s)SharedAccessSignature(?:=|(?:""?\s*:\s*""))(?P<fpg52>.{1,200}(?:dsas_secret|sig)=(?P<sas>[^#\)\(<>\r\n\s'""]+)))|(?:(?i)(?P<fpg58>http|ftp|https):\/{2}(?P<fpg55>[\w_.-]{1,200}\.logic\.azure\.com):?(?P<fpg54>[0-9]{2,5})?(?P<fpg56>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg57>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg63>http|ftp|https):\/{2}(?P<fpg60>[\w_.-]{1,200}\.azurewebsites\.net):?(?P<fpg59>[0-9]{2,3})?(?P<fpg61>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg62>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg68>http|ftp|https):\/{2}(?P<fpg65>[\w_.-]{1,200}(?:\.azureedge\.net|\.msecnd\.net)):?(?P<fpg64>[0-9]{2,5})?(?P<fpg66>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg67>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg69>[0-9A-Za-z/+]{76}\+ASt[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg70>[0-9A-Za-z]{33}AzCa[A-P][0-9A-Za-z]{5}=))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg71>[0-9a-zA-Z-_~.]{3}7Q~[0-9a-zA-Z-_~.]{31})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg72>[0-9a-zA-Z-_~.]{3}8Q~[0-9a-zA-Z-_~.]{34})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg73>[0-9A-Za-z_\-]{44}AzFu[0-9A-Za-z\-_]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg74>[0-9A-Za-z/+]{76}ACDb[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg75>[0-9A-Za-z+\/]{76}\+ABa[0-9A-Za-z+\/]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg76>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9A-Za-z])(?P<fpg77>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9a-zA-Z\/+])(?P<fpg78>[0-9a-zA-Z\/+]{76}\+AMC[0-9a-zA-Z\/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg79>[0-9A-Za-z+\/]{33}\+ASb[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ASb[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg80>[0-9A-Za-z+\/]{33}\+AEh[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+AEh[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg81>[0-9A-Za-z+\/]{33}\+ARm[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ARm[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg82>[A-Za-z0-9+\/]{42}\+ACR[A-D][A-Za-z0-9+\/]{5})(?:[^0-9a-z\/+=]|$))|(?:(?i)(?:user id|uid)\s*=\s*(?P<fpg83>[^;""<'\s]+)(?:[;""<'\s]|$))|(?:(?i)(?:server|data source)\s*=\s*(tcp:)?(?P<fpg84>[^;,""<'\s]+)(?:[;,""<'\s]|$))|(?:(?i),\s*(?P<fpg85>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg86>[A-Za-z0-9+\/]{42}\+SQL[A-D][A-Za-z0-9+\/]{5}))|(?:(?i)(?:initial catalog|database)\s*=\s*(?P<fpg87>[^;""<>*%&:\/?'\s]+)(?:[;""<>*%&:\/?'\s]|$))|(?:(?:^|[^0-9a-f\.-])(?P<fpg88>amzn1\.application-oa2-client\.[0-9a-f]{32})(?:[^0-9a-f\.-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg89>ASIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg90>GOOG1[A-Z2-7]{56})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg91>GOOG[A-Z2-7]{20})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg92>aio_[a-zA-Z]{4}[0-9]{2}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z/:])(?P<fpg93>1/[0-9]{14,16}:[a-f0-9]{32})(?:[^0-9A-Za-z/:]|$))|(?:(?:^|[^0-9A-Za-z/+~._\-%\\])(?P<fpg94>[0-9A-Za-z/+]{44})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg95>CLOJARS_[0-9a-f]{60})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg96>dvc_client_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg97>dvc_mobile_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg98>dvc_server_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg99>doo_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9a-f_])(?P<fpg100>dop_v[0-9]_[0-9a-f]{64})(?:[^0-9a-f_]|$))";
        //private static readonly string monsterRegexSecondHalf = @"(?:(?:^|[^0-9A-Za-z-_])(?P<fpg0>dor_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1>dos_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_.])(?P<fpg2>[012345ADEIMNOQTUYcgjkwxyz]{23,28}\.[0-9A-Za-z-_]{6,7}\.[0-9A-Za-z-_]{27,})(?:[^0-9A-Za-z-_.]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>dp\.audit\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>dp\.ct\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg5>dp\.pt\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg6>dp\.scim\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg7>dp\.st\.(?:[a-z0-9-_]{2,35}\.)?[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-._])(?P<fpg8>sl\.[0-9A-Za-z\-_]{136,})(?:[^0-9A-Za-z-._]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg9>duffel_live_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg10>duffel_test_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>EZAK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>EZTK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg13>fig(d|((u|o)(r|h)?))_[0-9A-Za-z_-]{40})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg14>FLWSECK-[0-9a-f]{32}-X)(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z+/\-_])(?P<fpg15>[0-9A-Za-z+/]{56,}={0,2}/[0-9A-HJKMNP-TV-Z]{7})(?:[^0-9A-Za-z+/\-_=]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg16>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Fa-f])(?P<fpg17>v1\.[0-9A-Fa-f]{40})(?:[^0-9A-Fa-f]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg18>gho_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg19>ghr_[0-9A-Za-z]{76})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg20>ghs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg21>gh1_[0-9A-Za-z]{21}_[0-9A-Za-z]{59}|github_pat_[0-9][0-9A-Za-z]{21}_[0-9A-Za-z]{59})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg22>ghu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg23>eyJrIjoi[0-9A-Za-z]{70,}={0,2})(?:[^0-9A-Za-z=]|$))|(?:(?:^|[^0-9A-Za-z\-])(?P<fpg24>pat-[a-z]{2}[1-9]-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z\-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg25>dG9rO[0-9A-Za-z]{54}=)(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg26>ion_[0-9A-Za-z]{36}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg27>ion_[0-9A-Za-z]{48}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?i)(?:^|[^0-9a-z\.-])(?P<fpg28>[0-9a-z\.-]+\.jfrog\.io))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg29>lin_api_[0-9A-Za-z]{40})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg30>lin_oauth_[0-9A-Za-z]{64})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg31>lmb_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg32>lma_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg33>Mid-server-[0-9A-Za-z_-]{24})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg34>NRIQ-[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg35>NRAK-[A-Z0-9]{27})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg36>NRRA-[a-f0-9]{42})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg37>api_live(?:_[a-z]{2})?\.[0-9A-Za-z_-]{11}\.[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z/+~_\-%\\])(?P<fpg38>sk-(?:[0-9A-Za-z]{0,40}-)?[0-9A-Za-z]{20}T3BlbkFJ[0-9A-Za-z]{20})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg39>pscale_pw_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg40>pscale_oauth_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg41>pscale_tkn_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg42>pcs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg43>pcu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg44>PSK[0-9A-Fa-f]{256})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg45>rdme_xn8s9h[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg46>rpa_[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg47>samsara_api_[0-9A-Za-z]{30})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg48>gzUdQrDW:[0-9]+:[0-9A-Za-z_]+)(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg49>secret_scanning_ab85fc6f8d7638cf1c11da812da308d43_[0-9A-Za-z]{5})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg50>SG\.[0-9A-Za-z-_]{22}\.[0-9A-Za-z-_]{43})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg51>xkeysib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg52>xsmtpsib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg53>shippo_live_[a-f0-9]{40})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg54>xapp-(?:\d)-(?:\w{10,15})-(?:\d{10,15})-(?:[0-9a-f]{60,70}))(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg55>(?:sk|sys)_live_(?:[0-9A-Za-z]{24}|[0-9A-Za-z]{34}|[0-9A-Za-z]{99,}))(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg56>AKID[0-9A-Za-z]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg57>tfp_[A-Za-z1-9]{40,50}_[A-Za-z1-9]{8,16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg58>wf[a-z]_[1-9]_[0-9A-Za-z]{38,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg59>sk_[0-9A-Za-z]{75})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg60>y[0-6]_[-_0-9A-Za-z]{55})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-f])(?P<fpg61>zpka_[0-9a-f]{32}_[0-9A-Fa-f]{8})(?:[^0-9a-f]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg62>ct[0-9A-Za-z]{1,4}_[0-9A-Za-z]{30,}[0-9A-Za-z]{6})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg63>hvs\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg64>b\.AAAAAQ[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg65>hvb\.AA[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg66>s\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?P<fpg67>hvs\.[0-9A-Za-z_\-]{91,})(?:[^0-9A-Za-z\._\-]|$))|(?:(?P<fpg68>rk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg69>sk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg70>Ci[QR][A-Za-z0-9_-]{17}LT[QR][A-Za-z0-9_-]{77,87})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg71>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg72>waka_sec_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg73>waka_tok_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg74>waka_ref_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg75>gcntfy-[a-z0-9\-_]{0,}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg76>persona_production_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z_\-]|$))";

        /* private static readonly string m1 = @"(?:(?:[^x]|^)(?P<fpg0>xox(?P<fpg1>p|b|a|o|r|s)-[0-9A-Za-z\-]+))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg2>ghp_[\w]{36})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>AKIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>LTAI([0-9A-Za-z]{12}|[0-9A-Za-z]{20}))(?:[^0-9A-Za-z]|$))|(?:(?:[^o]|^)(?P<fpg5>oy2[a-p][0-9a-z]{15}[aq][0-9a-z]{11}[eu][bdfhjlnprtvxz357][a-p][0-9a-z]{11}[aeimquy4])(?:[^aeimquy4]|$))|(?:(?i)server\s*=\s*(tcp:)?(?P<fpg6>[^,;""'=|\(\)\]\[><\s]+)(?:[,;""'=|\(\)\]\[><\s]|$))|(?:(?i)(?:user|user id|uid)\s*=\s*(?P<fpg7>[^,;""'=|&\]\[><\s]+)(?:[,;""'=|&\]\[><\s]|$))|(?:(?i)port\s*=\s*(?P<fpg8>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg9>[^;""<'\s]{8,128})(?:[;""<'\s]|$))|(?:(?i)database\s*=\s*(?P<fpg10>[^,;""'=|&\]\[><\s]{8,128})(?:[,;""'=|&\]\[><\s]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>shpat_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>shpss_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg13>PMAK-[a-f0-9]{24}-[a-f0-9]{34})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^n])(?P<fpg14>npm_[0-9a-zA-Z]{30}[\w]{6})(?:[^\w]|$))|(?:(?:^|[^2-7a-z])(?P<fpg15>[2-7a-z]{52})(?:[^2-7a-z]|$))|(?:(?i)(?:^|[^0-9a-z-])(?P<fpg16>[0-9a-z-]+)\.redis\.cache\.windows\.net(?:\b|$))|(?:(?i)password\s*=\s*(?P<fpg17>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)https:\/\/(?P<fpg18>[0-9a-z][0-9a-z-]{1,42}[0-9a-z])\.documents\.azure\.com:443(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg19>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)SharedAccessKeyName\s*=\s*(?P<fpg20>[\w]+))|(?:(?i)SharedAccessKey\s*=\s*(?P<fpg21>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*sb:\/\/(?P<fpg22>.{6,50})\.(?P<fpg23>servicebus\.[\w\.]+?)[^\w\.])|(?:(?i)(?:^|[^0-9a-z])(?P<fpg24>[0-9a-z]+)\.(?P<fpg25>(?:blob|file|table|queue)\.core\.windows\.net)(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg26>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)AccountName\s*=\s*(?P<fpg27>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?i)AccountKey\s*=\s*(?P<fpg28>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)EndpointSuffix\s*=\s*(?P<fpg29>[a-z\.]+)(?:[^a-z\.]|$))|(?:(?i)(?:xstore.{0,100})[^<]*?account.{0,30}?[>""](?P<fpg30>[0-9a-z]+)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?key.{0,30}?[>""](?P<fpg31>[0-9a-z\/+]{86}==)[<""])|(?:(?i)(?:xstore.{0,100})[^<]*?uri.{0,30}?[>""](?P<fpg32>[a-z\.]+)[<""])|(?:(?is)#(?P<fpg33>[0-9a-z\/+]{86}==))|(?:(?is)(?:true|false)#(?P<fpg34>[a-z]{2,24})#)|(?:(?is)--account-name\s+(?P<fpg35>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?is)--account-key\s+(?P<fpg36>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?:^|[^0-9a-f\-])(?P<fpg37>dapi[0-9a-f\-]{32,34})(?:[^0-9a-f\-]|$))|(?:(?i)(?:^|[^0-9a-z\-])(?P<fpg38>[0-9a-z\-]+)\.azurewebsites\.net(?P<fpg39>\/[^\?""'`<\]\r\n\s\)]+)?)|(?:(?i)Id\s*=\s*(?P<fpg40>[^;]{31})(?:;|$))|(?:(?i)Secret\s*=\s*(?P<fpg41>[0-9a-z\/+]{43}=)(?:[^=]|$))";
         private static readonly string m2 = @"(?:(?i)Endpoint\s*=\s*https:\/\/(?P<fpg0>[0-9a-z\-]{5,50})\.azconfig\.io(?:\b|$))|(?:(?:^|[^0-9a-zA-Z\.])(?i)(?:[0-9a-z\.]+\.office.com)\/webhook(?:b2)?\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})@(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})\/IncomingWebhook\/(?P<fpg1>[0-9a-f]{12}[1-5][0-9a-f]{3}[89ab][0-9a-f]{15})\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})(?:[^0-9a-f]|$))|(?:(?i)(?P<fpg7>http|ftp|https):\/{2}(?P<fpg2>[0-9a-z]+)\.(?P<fpg4>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net)):?(?P<fpg3>[0-9]{2,5})?(?P<fpg5>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg6>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:BlobEndpoint|QueueEndpoint|FileEndpoint|TableEndpoint)(?:=|(?:""?\s*:\s*""))(?P<fpg11>https):\/\/(?P<fpg8>[0-9a-z]+)\.(?P<fpg9>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net))(?s)(?:.|\n){1,50}(?-s)SharedAccessSignature(?:=|(?:""?\s*:\s*""))(?P<fpg10>.{1,200}(?:dsas_secret|sig)=(?P<sas>[^#\)\(<>\r\n\s'""]+)))|(?:(?i)(?P<fpg16>http|ftp|https):\/{2}(?P<fpg13>[\w_.-]{1,200}\.logic\.azure\.com):?(?P<fpg12>[0-9]{2,5})?(?P<fpg14>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg15>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg21>http|ftp|https):\/{2}(?P<fpg18>[\w_.-]{1,200}\.azurewebsites\.net):?(?P<fpg17>[0-9]{2,3})?(?P<fpg19>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg20>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg26>http|ftp|https):\/{2}(?P<fpg23>[\w_.-]{1,200}(?:\.azureedge\.net|\.msecnd\.net)):?(?P<fpg22>[0-9]{2,5})?(?P<fpg24>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg25>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg27>[0-9A-Za-z/+]{76}\+ASt[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg28>[0-9A-Za-z]{33}AzCa[A-P][0-9A-Za-z]{5}=))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg29>[0-9a-zA-Z-_~.]{3}7Q~[0-9a-zA-Z-_~.]{31})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg30>[0-9a-zA-Z-_~.]{3}8Q~[0-9a-zA-Z-_~.]{34})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg31>[0-9A-Za-z_\-]{44}AzFu[0-9A-Za-z\-_]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg32>[0-9A-Za-z/+]{76}ACDb[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg33>[0-9A-Za-z+\/]{76}\+ABa[0-9A-Za-z+\/]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg34>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9A-Za-z])(?P<fpg35>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9a-zA-Z\/+])(?P<fpg36>[0-9a-zA-Z\/+]{76}\+AMC[0-9a-zA-Z\/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg37>[0-9A-Za-z+\/]{33}\+ASb[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ASb[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg38>[0-9A-Za-z+\/]{33}\+AEh[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+AEh[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg39>[0-9A-Za-z+\/]{33}\+ARm[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ARm[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg40>[A-Za-z0-9+\/]{42}\+ACR[A-D][A-Za-z0-9+\/]{5})(?:[^0-9a-z\/+=]|$))|(?:(?i)(?:user id|uid)\s*=\s*(?P<fpg41>[^;""<'\s]+)(?:[;""<'\s]|$))|(?:(?i)(?:server|data source)\s*=\s*(tcp:)?(?P<fpg42>[^;,""<'\s]+)(?:[;,""<'\s]|$))|(?:(?i),\s*(?P<fpg43>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg44>[A-Za-z0-9+\/]{42}\+SQL[A-D][A-Za-z0-9+\/]{5}))|(?:(?i)(?:initial catalog|database)\s*=\s*(?P<fpg45>[^;""<>*%&:\/?'\s]+)(?:[;""<>*%&:\/?'\s]|$))|(?:(?:^|[^0-9a-f\.-])(?P<fpg46>amzn1\.application-oa2-client\.[0-9a-f]{32})(?:[^0-9a-f\.-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg47>ASIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg48>GOOG1[A-Z2-7]{56})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg49>GOOG[A-Z2-7]{20})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg50>aio_[a-zA-Z]{4}[0-9]{2}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z/:])(?P<fpg51>1/[0-9]{14,16}:[a-f0-9]{32})(?:[^0-9A-Za-z/:]|$))|(?:(?:^|[^0-9A-Za-z/+~._\-%\\])(?P<fpg52>[0-9A-Za-z/+]{44})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg53>CLOJARS_[0-9a-f]{60})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg54>dvc_client_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg55>dvc_mobile_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg56>dvc_server_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg57>doo_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9a-f_])(?P<fpg58>dop_v[0-9]_[0-9a-f]{64})(?:[^0-9a-f_]|$))|";
         private static readonly string m3 = @"(?:(?:^|[^0-9A-Za-z-_])(?P<fpg0>dor_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1>dos_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_.])(?P<fpg2>[012345ADEIMNOQTUYcgjkwxyz]{23,28}\.[0-9A-Za-z-_]{6,7}\.[0-9A-Za-z-_]{27,})(?:[^0-9A-Za-z-_.]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>dp\.audit\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>dp\.ct\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg5>dp\.pt\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg6>dp\.scim\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg7>dp\.st\.(?:[a-z0-9-_]{2,35}\.)?[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-._])(?P<fpg8>sl\.[0-9A-Za-z\-_]{136,})(?:[^0-9A-Za-z-._]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg9>duffel_live_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg10>duffel_test_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>EZAK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>EZTK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg13>fig(d|((u|o)(r|h)?))_[0-9A-Za-z_-]{40})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg14>FLWSECK-[0-9a-f]{32}-X)(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z+/\-_])(?P<fpg15>[0-9A-Za-z+/]{56,}={0,2}/[0-9A-HJKMNP-TV-Z]{7})(?:[^0-9A-Za-z+/\-_=]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg16>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Fa-f])(?P<fpg17>v1\.[0-9A-Fa-f]{40})(?:[^0-9A-Fa-f]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg18>gho_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg19>ghr_[0-9A-Za-z]{76})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg20>ghs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg21>gh1_[0-9A-Za-z]{21}_[0-9A-Za-z]{59}|github_pat_[0-9][0-9A-Za-z]{21}_[0-9A-Za-z]{59})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg22>ghu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg23>eyJrIjoi[0-9A-Za-z]{70,}={0,2})(?:[^0-9A-Za-z=]|$))|(?:(?:^|[^0-9A-Za-z\-])(?P<fpg24>pat-[a-z]{2}[1-9]-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z\-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg25>dG9rO[0-9A-Za-z]{54}=)(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg26>ion_[0-9A-Za-z]{36}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg27>ion_[0-9A-Za-z]{48}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?i)(?:^|[^0-9a-z\.-])(?P<fpg28>[0-9a-z\.-]+\.jfrog\.io))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg29>lin_api_[0-9A-Za-z]{40})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg30>lin_oauth_[0-9A-Za-z]{64})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg31>lmb_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg32>lma_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg33>Mid-server-[0-9A-Za-z_-]{24})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg34>NRIQ-[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg35>NRAK-[A-Z0-9]{27})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg36>NRRA-[a-f0-9]{42})(?:[^0-9A-Za-z]|$))|";
         private static readonly string m4 = @"(?:(?:^|[^0-9A-Za-z_-])(?P<fpg0>api_live(?:_[a-z]{2})?\.[0-9A-Za-z_-]{11}\.[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z/+~_\-%\\])(?P<fpg1>sk-(?:[0-9A-Za-z]{0,40}-)?[0-9A-Za-z]{20}T3BlbkFJ[0-9A-Za-z]{20})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg2>pscale_pw_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg3>pscale_oauth_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg4>pscale_tkn_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg5>pcs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg6>pcu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg7>PSK[0-9A-Fa-f]{256})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg8>rdme_xn8s9h[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg9>rpa_[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg10>samsara_api_[0-9A-Za-z]{30})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg11>gzUdQrDW:[0-9]+:[0-9A-Za-z_]+)(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>secret_scanning_ab85fc6f8d7638cf1c11da812da308d43_[0-9A-Za-z]{5})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg13>SG\.[0-9A-Za-z-_]{22}\.[0-9A-Za-z-_]{43})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg14>xkeysib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg15>xsmtpsib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg16>shippo_live_[a-f0-9]{40})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg17>xapp-(?:\d)-(?:\w{10,15})-(?:\d{10,15})-(?:[0-9a-f]{60,70}))(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg18>(?:sk|sys)_live_(?:[0-9A-Za-z]{24}|[0-9A-Za-z]{34}|[0-9A-Za-z]{99,}))(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg19>AKID[0-9A-Za-z]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg20>tfp_[A-Za-z1-9]{40,50}_[A-Za-z1-9]{8,16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg21>wf[a-z]_[1-9]_[0-9A-Za-z]{38,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg22>sk_[0-9A-Za-z]{75})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg23>y[0-6]_[-_0-9A-Za-z]{55})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-f])(?P<fpg24>zpka_[0-9a-f]{32}_[0-9A-Fa-f]{8})(?:[^0-9a-f]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg25>ct[0-9A-Za-z]{1,4}_[0-9A-Za-z]{30,}[0-9A-Za-z]{6})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg26>hvs\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg27>b\.AAAAAQ[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg28>hvb\.AA[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg29>s\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?P<fpg30>hvs\.[0-9A-Za-z_\-]{91,})(?:[^0-9A-Za-z\._\-]|$))|(?:(?P<fpg31>rk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg32>sk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg33>Ci[QR][A-Za-z0-9_-]{17}LT[QR][A-Za-z0-9_-]{77,87})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg34>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg35>waka_sec_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg36>waka_tok_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg37>waka_ref_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg38>gcntfy-[a-z0-9\-_]{0,}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg39>persona_production_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z_\-]|$))";
         */
        private static readonly string m81 = @"(?:(?:[^x]|^)(?P<fpg0>xox(?P<fpg1>p|b|a|o|r|s)-[0-9A-Za-z\-]+))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg2>ghp_[\w]{36})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>AKIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>LTAI([0-9A-Za-z]{12}|[0-9A-Za-z]{20}))(?:[^0-9A-Za-z]|$))|(?:(?:[^o]|^)(?P<fpg5>oy2[a-p][0-9a-z]{15}[aq][0-9a-z]{11}[eu][bdfhjlnprtvxz357][a-p][0-9a-z]{11}[aeimquy4])(?:[^aeimquy4]|$))|(?:(?i)server\s*=\s*(tcp:)?(?P<fpg6>[^,;""'=|\(\)\]\[><\s]+)(?:[,;""'=|\(\)\]\[><\s]|$))|(?:(?i)(?:user|user id|uid)\s*=\s*(?P<fpg7>[^,;""'=|&\]\[><\s]+)(?:[,;""'=|&\]\[><\s]|$))|(?:(?i)port\s*=\s*(?P<fpg8>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg9>[^;""<'\s]{8,128})(?:[;""<'\s]|$))|(?:(?i)database\s*=\s*(?P<fpg10>[^,;""'=|&\]\[><\s]{8,128})(?:[,;""'=|&\]\[><\s]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>shpat_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>shpss_[0-9A-Fa-f]{32,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg13>PMAK-[a-f0-9]{24}-[a-f0-9]{34})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^n])(?P<fpg14>npm_[0-9a-zA-Z]{30}[\w]{6})(?:[^\w]|$))|(?:(?:^|[^2-7a-z])(?P<fpg15>[2-7a-z]{52})(?:[^2-7a-z]|$))|(?:(?i)(?:^|[^0-9a-z-])(?P<fpg16>[0-9a-z-]+)\.redis\.cache\.windows\.net(?:\b|$))|(?:(?i)password\s*=\s*(?P<fpg17>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)https:\/\/(?P<fpg18>[0-9a-z][0-9a-z-]{1,42}[0-9a-z])\.documents\.azure\.com:443(?:\b|$))";
        private static readonly string m82 = @"(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg19>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)SharedAccessKeyName\s*=\s*(?P<fpg20>[\w]+))|(?:(?i)SharedAccessKey\s*=\s*(?P<fpg21>[0-9a-z\/+]{43}=)(?:[^=]|$))|(?:(?i)Endpoint\s*=\s*sb:\/\/(?P<fpg22>.{6,50})\.(?P<fpg23>servicebus\.[\w\.]+?)[^\w\.])|(?:(?i)(?:^|[^0-9a-z])(?P<fpg24>[0-9a-z]+)\.(?P<fpg25>(?:blob|file|table|queue)\.core\.windows\.net)(?:\b|$))|(?:(?i)(?:^|[^0-9a-z\/+])(?P<fpg26>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)AccountName\s*=\s*(?P<fpg27>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?i)AccountKey\s*=\s*(?P<fpg28>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?i)EndpointSuffix\s*=\s*(?P<fpg29>[a-z\.]+)(?:[^a-z\.]|$))|(?:(?i)(?:xstore.{0,100})[^<]*?account.{0,30}?[>""""](?P<fpg30>[0-9a-z]+)[<""""])|(?:(?i)(?:xstore.{0,100})[^<]*?key.{0,30}?[>""""](?P<fpg31>[0-9a-z\/+]{86}==)[<""""])|(?:(?i)(?:xstore.{0,100})[^<]*?uri.{0,30}?[>""""](?P<fpg32>[a-z\.]+)[<""""])|(?:(?is)#(?P<fpg33>[0-9a-z\/+]{86}==))|(?:(?is)(?:true|false)#(?P<fpg34>[a-z]{2,24})#)|(?:(?is)--account-name\s+(?P<fpg35>[0-9a-z]+)(?:[^0-9a-z]|$))|(?:(?is)--account-key\s+(?P<fpg36>[0-9a-z\/+]{86}==)(?:[^=]|$))|(?:(?:^|[^0-9a-f\-])(?P<fpg37>dapi[0-9a-f\-]{32,34})(?:[^0-9a-f\-]|$))|(?:(?i)(?:^|[^0-9a-z\-])(?P<fpg38>[0-9a-z\-]+)\.azurewebsites\.net(?P<fpg39>\/[^\?""""'`<\]\r\n\s\)]+)?)|(?:(?i)Id\s*=\s*(?P<fpg40>[^;]{31})(?:;|$))|(?:(?i)Secret\s*=\s*(?P<fpg41>[0-9a-z\/+]{43}=)(?:[^=]|$))";
        private static readonly string m83 = @"(?:(?i)Endpoint\s*=\s*https:\/\/(?P<fpg0>[0-9a-z\-]{5,50})\.azconfig\.io(?:\b|$))|(?:(?:^|[^0-9a-zA-Z\.])(?i)(?:[0-9a-z\.]+\.office.com)\/webhook(?:b2)?\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})@(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})\/IncomingWebhook\/(?P<fpg1>[0-9a-f]{12}[1-5][0-9a-f]{3}[89ab][0-9a-f]{15})\/(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})(?:[^0-9a-f]|$))|(?:(?i)(?P<fpg7>http|ftp|https):\/{2}(?P<fpg2>[0-9a-z]+)\.(?P<fpg4>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net)):?(?P<fpg3>[0-9]{2,5})?(?P<fpg5>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg6>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:BlobEndpoint|QueueEndpoint|FileEndpoint|TableEndpoint)(?:=|(?:""?\s*:\s*""))(?P<fpg11>https):\/\/(?P<fpg8>[0-9a-z]+)\.(?P<fpg9>[\w_.-]{1,200}(?:\.core\.windows\.net|\.core\.chinacloudapi\.cn|\.core\.cloudapi\.de|\.core\.usgovcloudapi\.net))(?s)(?:.|\n){1,50}(?-s)SharedAccessSignature(?:=|(?:""?\s*:\s*""))(?P<fpg10>.{1,200}(?:dsas_secret|sig)=(?P<sas>[^#\)\(<>\r\n\s'""]+)))|(?:(?i)(?P<fpg16>http|ftp|https):\/{2}(?P<fpg13>[\w_.-]{1,200}\.logic\.azure\.com):?(?P<fpg12>[0-9]{2,5})?(?P<fpg14>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg15>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg21>http|ftp|https):\/{2}(?P<fpg18>[\w_.-]{1,200}\.azurewebsites\.net):?(?P<fpg17>[0-9]{2,3})?(?P<fpg19>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg20>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?i)(?P<fpg26>http|ftp|https):\/{2}(?P<fpg23>[\w_.-]{1,200}(?:\.azureedge\.net|\.msecnd\.net)):?(?P<fpg22>[0-9]{2,5})?(?P<fpg24>[\w.,@?^=%&:\/~+#-]*?[\w@?^=%&\/~+#-])\?(?P<fpg25>(?:[^#?]+?(?:dsas_secret|sig)=[^#\)\(<>\r\n\s'"",\\]+)))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg27>[0-9A-Za-z/+]{76}\+ASt[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg28>[0-9A-Za-z]{33}AzCa[A-P][0-9A-Za-z]{5}=))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg29>[0-9a-zA-Z-_~.]{3}7Q~[0-9a-zA-Z-_~.]{31})(?:[^0-9a-zA-Z-_~.]|$))|(?:(?:^|[^0-9a-zA-Z-_~.])(?P<fpg30>[0-9a-zA-Z-_~.]{3}8Q~[0-9a-zA-Z-_~.]{34})(?:[^0-9a-zA-Z-_~.]|$))";
        private static readonly string m84 = @"|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg31>[0-9A-Za-z_\-]{44}AzFu[0-9A-Za-z\-_]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z/+])(?P<fpg32>[0-9A-Za-z/+]{76}ACDb[0-9A-Za-z/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg33>[0-9A-Za-z+\/]{76}\+ABa[0-9A-Za-z+\/]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z])(?P<fpg34>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9A-Za-z])(?P<fpg35>[0-9A-Za-z]{42}AzSe[A-D][0-9A-Za-z]{5}))|(?:(?:^|[^0-9a-zA-Z\/+])(?P<fpg36>[0-9a-zA-Z\/+]{76}\+AMC[0-9a-zA-Z\/+]{5}[AQgw]==))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg37>[0-9A-Za-z+\/]{33}\+ASb[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ASb[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg38>[0-9A-Za-z+\/]{33}\+AEh[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+AEh[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg39>[0-9A-Za-z+\/]{33}\+ARm[A-P][0-9A-Za-z+\/]{5}=|[0-9A-Za-z+\/]{42}\+ARm[A-D][0-9A-Za-z+\/]{5}))|(?:(?:^|[^0-9A-Za-z+\/])(?P<fpg40>[A-Za-z0-9+\/]{42}\+ACR[A-D][A-Za-z0-9+\/]{5})(?:[^0-9a-z\/+=]|$))|(?:(?i)(?:user id|uid)\s*=\s*(?P<fpg41>[^;""""<'\s]+)(?:[;""""<'\s]|$))|(?:(?i)(?:server|data source)\s*=\s*(tcp:)?(?P<fpg42>[^;,""""<'\s]+)(?:[;,""""<'\s]|$))|(?:(?i),\s*(?P<fpg43>[0-9]{4,5})(?:[^0-9]|$))|(?:(?i)(?:password|pwd)\s*=\s*(?P<fpg44>[A-Za-z0-9+\/]{42}\+SQL[A-D][A-Za-z0-9+\/]{5}))|(?:(?i)(?:initial catalog|database)\s*=\s*(?P<fpg45>[^;""""<>*%&:\/?'\s]+)(?:[;""""<>*%&:\/?'\s]|$))|(?:(?:^|[^0-9a-f\.-])(?P<fpg46>amzn1\.application-oa2-client\.[0-9a-f]{32})(?:[^0-9a-f\.-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg47>ASIA[A-Z2-7]{16})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg48>GOOG1[A-Z2-7]{56})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z\-~_+/%\\])(?P<fpg49>GOOG[A-Z2-7]{20})(?:[^0-9A-Za-z\-~_+/=%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg50>aio_[a-zA-Z]{4}[0-9]{2}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z/:])(?P<fpg51>1/[0-9]{14,16}:[a-f0-9]{32})(?:[^0-9A-Za-z/:]|$))|(?:(?:^|[^0-9A-Za-z/+~._\-%\\])(?P<fpg52>[0-9A-Za-z/+]{44})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg53>CLOJARS_[0-9a-f]{60})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg54>dvc_client_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg55>dvc_mobile_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-./\\_])(?P<fpg56>dvc_server_[a-f0-9]{8}_([a-f0-9]{4}_){3}[a-f0-9]{12}_[a-f0-9]{7})(?:[^0-9A-Za-z-./\\_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg57>doo_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9a-f_])(?P<fpg58>dop_v[0-9]_[0-9a-f]{64})(?:[^0-9a-f_]|$))";
        private static readonly string m85 = @"(?:(?:^|[^0-9A-Za-z-_])(?P<fpg0>dor_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg1>dos_v[0-9]_[0-9a-f]{64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_.])(?P<fpg2>[012345ADEIMNOQTUYcgjkwxyz]{23,28}\.[0-9A-Za-z-_]{6,7}\.[0-9A-Za-z-_]{27,})(?:[^0-9A-Za-z-_.]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg3>dp\.audit\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg4>dp\.ct\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg5>dp\.pt\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg6>dp\.scim\.[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg7>dp\.st\.(?:[a-z0-9-_]{2,35}\.)?[0-9A-Za-z]{40,44})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-._])(?P<fpg8>sl\.[0-9A-Za-z\-_]{136,})(?:[^0-9A-Za-z-._]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg9>duffel_live_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg10>duffel_test_[0-9A-Za-z_-]{43})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg11>EZAK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>EZTK[a-f0-9]{32}[0-9A-Za-z]{22})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg13>fig(d|((u|o)(r|h)?))_[0-9A-Za-z_-]{40})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg14>FLWSECK-[0-9a-f]{32}-X)(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z+/\-_])(?P<fpg15>[0-9A-Za-z+/]{56,}={0,2}/[0-9A-HJKMNP-TV-Z]{7})(?:[^0-9A-Za-z+/\-_=]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg16>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Fa-f])(?P<fpg17>v1\.[0-9A-Fa-f]{40})(?:[^0-9A-Fa-f]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg18>gho_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))";
        private static readonly string m86 = @"(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg19>ghr_[0-9A-Za-z]{76})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg20>ghs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg21>gh1_[0-9A-Za-z]{21}_[0-9A-Za-z]{59}|github_pat_[0-9][0-9A-Za-z]{21}_[0-9A-Za-z]{59})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg22>ghu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg23>eyJrIjoi[0-9A-Za-z]{70,}={0,2})(?:[^0-9A-Za-z=]|$))|(?:(?:^|[^0-9A-Za-z\-])(?P<fpg24>pat-[a-z]{2}[1-9]-[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z\-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg25>dG9rO[0-9A-Za-z]{54}=)(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg26>ion_[0-9A-Za-z]{36}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg27>ion_[0-9A-Za-z]{48}[0-4][0-9A-Za-z]{5})(?:[^0-9A-Za-z_]|$))|(?:(?i)(?:^|[^0-9a-z\.-])(?P<fpg28>[0-9a-z\.-]+\.jfrog\.io))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg29>lin_api_[0-9A-Za-z]{40})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg30>lin_oauth_[0-9A-Za-z]{64})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg31>lmb_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z\-_])(?P<fpg32>lma_(\S{60})L([\d\w\-_]{48})L(\S{6}))(?:[^0-9A-Za-z\-_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg33>Mid-server-[0-9A-Za-z_-]{24})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg34>NRIQ-[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg35>NRAK-[A-Z0-9]{27})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg36>NRRA-[a-f0-9]{42})(?:[^0-9A-Za-z]|$))";
        private static readonly string m87 = @"(?:(?:^|[^0-9A-Za-z_-])(?P<fpg0>api_live(?:_[a-z]{2})?\.[0-9A-Za-z_-]{11}\.[0-9A-Za-z_-]{32})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z/+~_\-%\\])(?P<fpg1>sk-(?:[0-9A-Za-z]{0,40}-)?[0-9A-Za-z]{20}T3BlbkFJ[0-9A-Za-z]{20})(?:[^0-9A-Za-z/+~=_\-%\\]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg2>pscale_pw_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg3>pscale_oauth_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z-_])(?P<fpg4>pscale_tkn_[0-9A-Za-z_-]{32,64})(?:[^0-9A-Za-z-_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg5>pcs_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg6>pcu_[0-9A-Za-z]{36})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg7>PSK[0-9A-Fa-f]{256})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg8>rdme_xn8s9h[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9a-z])(?P<fpg9>rpa_[0-9a-z]{64})(?:[^0-9a-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg10>samsara_api_[0-9A-Za-z]{30})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg11>gzUdQrDW:[0-9]+:[0-9A-Za-z_]+)(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg12>secret_scanning_ab85fc6f8d7638cf1c11da812da308d43_[0-9A-Za-z]{5})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg13>SG\.[0-9A-Za-z-_]{22}\.[0-9A-Za-z-_]{43})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg14>xkeysib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg15>xsmtpsib-[0-9a-f]{64}-[0-9A-Za-z]{16})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg16>shippo_live_[a-f0-9]{40})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg17>xapp-(?:\d)-(?:\w{10,15})-(?:\d{10,15})-(?:[0-9a-f]{60,70}))(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg18>(?:sk|sys)_live_(?:[0-9A-Za-z]{24}|[0-9A-Za-z]{34}|[0-9A-Za-z]{99,}))(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg19>AKID[0-9A-Za-z]{32})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg20>tfp_[A-Za-z1-9]{40,50}_[A-Za-z1-9]{8,16})(?:[^0-9A-Za-z]|$))";
        private static readonly string m88 = @"(?:(?:^|[^0-9A-Za-z])(?P<fpg21>wf[a-z]_[1-9]_[0-9A-Za-z]{38,64})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg22>sk_[0-9A-Za-z]{75})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z])(?P<fpg23>y[0-6]_[-_0-9A-Za-z]{55})(?:[^0-9A-Za-z]|$))|(?:(?:^|[^0-9a-f])(?P<fpg24>zpka_[0-9a-f]{32}_[0-9A-Fa-f]{8})(?:[^0-9a-f]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg25>ct[0-9A-Za-z]{1,4}_[0-9A-Za-z]{30,}[0-9A-Za-z]{6})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg26>hvs\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg27>b\.AAAAAQ[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg28>hvb\.AA[A-Za-z0-9_\-]{80,})(?:[^0-9A-Za-z_\-]|$))|(?:(?:^|[^0-9A-Za-z\.])(?P<fpg29>s\.[0-9A-Za-z]{24})(?:[^0-9A-Za-z\.]|$))|(?:(?P<fpg30>hvs\.[0-9A-Za-z_\-]{91,})(?:[^0-9A-Za-z\._\-]|$))|(?:(?P<fpg31>rk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg32>sk_(live|test)_[0-9A-Za-z_]{63,99})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_-])(?P<fpg33>Ci[QR][A-Za-z0-9_-]{17}LT[QR][A-Za-z0-9_-]{77,87})(?:[^0-9A-Za-z_-]|$))|(?:(?:^|[^0-9A-Za-z-_\.])(?P<fpg34>e[0-9A-Za-z-_=]{14,}\.e[0-9A-Za-z-_=]{14,}\.[0-9A-Za-z-_=]+)(?:[^0-9A-Za-z-_\.]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg35>waka_sec_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg36>waka_tok_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?:^|[^0-9A-Za-z_])(?P<fpg37>waka_ref_[0-9A-Za-z]{80})(?:[^0-9A-Za-z_]|$))|(?:(?P<fpg38>gcntfy-[a-z0-9\-_]{0,}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}-[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}))|(?:(?:^|[^0-9A-Za-z_\-])(?P<fpg39>persona_production_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})(?:[^0-9A-Za-z_\-]|$))";

        internal static IRegex RegexEngine;

        public AnalyzeCommand(IFileSystem fileSystem = null)
            : base(fileSystem)
        {
            Tool.Driver.Name = "Spmi";
            this.Tool.Driver.InformationUri = new Uri("https://aka.ms/sarif-pattern-matcher");

            // HULON
            RegexEngine = RE2Regex.Instance;

            // We perform this work in order to force caching of these
            // expressions (an operation which otherwise can cause
            // threading problems).

            //RegexEngine.Match(string.Empty, monsterRegex);


            RegexEngine.Match(string.Empty, m81);
            RegexEngine.Match(string.Empty, m82);
            RegexEngine.Match(string.Empty, m83);
            RegexEngine.Match(string.Empty, m84);
            RegexEngine.Match(string.Empty, m85);
            RegexEngine.Match(string.Empty, m86);
            RegexEngine.Match(string.Empty, m87);
            RegexEngine.Match(string.Empty, m88);
        }

        public static ISet<Skimmer<AnalyzeContext>> CreateSkimmersFromDefinitionsFiles(IFileSystem fileSystem,
                                                                                       IEnumerable<string> searchDefinitionsPaths,
                                                                                       Tool tool,
                                                                                       IRegex engine = null)
        {
            tool.Extensions ??= new List<ToolComponent>();

            engine ??= RE2Regex.Instance;

            var validators = new ValidatorsCache(validatorBinaryPaths: null, fileSystem);

            var skimmers = new HashSet<Skimmer<AnalyzeContext>>();

            foreach (string inputSearchDefinitionsPath in searchDefinitionsPaths)
            {
                string searchDefinitionsPath = Path.GetFullPath(inputSearchDefinitionsPath);

                // INTERESTING BREAKPOINT: debugging definitions JSON load/other failures.
                // Set conditional breakpoint on 'searchDefinitionsPath' to narrow focus.

                if (!fileSystem.FileExists(searchDefinitionsPath))
                {
                    throw new ArgumentException($"Could not locate specified definitions path: '{searchDefinitionsPath}'");
                }

                string searchDefinitionsText =
                    fileSystem.FileReadAllText(searchDefinitionsPath);

                SearchDefinitions definitions =
                    JsonConvert.DeserializeObject<SearchDefinitions>(searchDefinitionsText);

                // This would skip files that does not look like rules.
                if (definitions == null || definitions.Definitions == null)
                {
                    continue;
                }

                string name = definitions.ExtensionName;
                string version = null;

                string semanticVersion = null;
                if (!string.IsNullOrEmpty(definitions.ValidatorsAssemblyName))
                {
                    string directory = Path.GetDirectoryName(searchDefinitionsPath);
                    FileVersionInfo fvi = fileSystem.FileVersionInfoGetVersionInfo(Path.Combine(directory, definitions.ValidatorsAssemblyName));

                    name = $"{fvi?.CompanyName}/{fvi?.FileDescription}/{name}";
                    // TBD add version details. Breaks test baselines currently.
                    //semanticVersion = fvi?.ProductVersion;
                    //version = fvi?.FileVersion;
                }

                var toolComponent = new ToolComponent
                {
                    Name = name,
                    Guid = definitions.Guid,
                    Version = version,
                    SemanticVersion = semanticVersion,
                    Locations = new List<ArtifactLocation>(new[]
                    {
                        new ArtifactLocation
                        {
                            Uri = new Uri(searchDefinitionsPath),
                        },
                    }),
                };

                int extensionIndex = tool.Extensions.Count;
                tool.Extensions.Add(toolComponent);

                string validatorPath = null;
                string definitionsDirectory = Path.GetDirectoryName(searchDefinitionsPath);

                if (!string.IsNullOrEmpty(definitions.ValidatorsAssemblyName))
                {
                    // TODO File.Exists check? Logging if not locatable?
                    validatorPath = Path.Combine(definitionsDirectory, definitions.ValidatorsAssemblyName);
                    validators.ValidatorPaths.Add(validatorPath);
                }
                else
                {
                    // If no explicit name of a validator binary was provided,
                    // we look for one that lives alongside the definitions file.
                    validatorPath = Path.GetFileNameWithoutExtension(searchDefinitionsPath) + ".dll";
                    validatorPath = Path.Combine(definitionsDirectory, validatorPath);

                    if (File.Exists(validatorPath))
                    {
                        validators.ValidatorPaths.Add(validatorPath);
                    }
                }

                // INTERESTING BREAKPOINT: debugging failure to expand/process shared strings.
                // Set conditional breakpoint on 'searchDefinitionsPath' to narrow focus.
                Dictionary<string, string> sharedStrings = null;
                if (!string.IsNullOrEmpty(definitions.SharedStringsFileName))
                {
                    string sharedStringsFullPath = Path.Combine(definitionsDirectory, definitions.SharedStringsFileName);
                    sharedStrings = LoadSharedStrings(sharedStringsFullPath, fileSystem);
                }

                definitions = PushInheritedData(definitions, sharedStrings);

                foreach (SearchDefinition definition in definitions.Definitions)
                {
                    Skimmer<AnalyzeContext> skimmer = skimmers.FirstOrDefault(skimmer => skimmer.Id == definition.Id);

                    if (skimmer != null)
                    {
                        skimmers.Remove(skimmer);
                    }

                    skimmers.Add(
                        new SearchSkimmer(engine: engine,
                                          validators: validators,
                                          definition)
                        {
                            ExtensionIndex = extensionIndex,
                        });

                    const string singleSpace = " ";

                    // Send no-op match operations through engine in order to drive caching of all regexes.
                    if (definition.FileNameAllowRegex != null)
                    {
                        engine.Match(singleSpace, definition.FileNameAllowRegex, RegexDefaults.DefaultOptionsCaseSensitive);
                    }

                    foreach (MatchExpression matchExpression in definition.MatchExpressions)
                    {
                        if (!string.IsNullOrEmpty(matchExpression.FileNameAllowRegex))
                        {
                            engine.Match(singleSpace, matchExpression.FileNameAllowRegex, RegexDefaults.DefaultOptionsCaseSensitive);
                        }

                        if (!string.IsNullOrEmpty(matchExpression.ContentsRegex))
                        {
                            engine.Match(singleSpace, matchExpression.ContentsRegex, RegexDefaults.DefaultOptionsCaseSensitive);
                        }
                    }
                }
            }

            return skimmers;
        }

        internal static SearchDefinitions PushInheritedData(SearchDefinitions definitions, Dictionary<string, string> sharedStrings)
        {
            var idToExpressionsMap = new Dictionary<string, List<MatchExpression>>();

            int extensionsCount = 0;
            foreach (SearchDefinition definition in definitions.Definitions)
            {
                definition.FileNameDenyRegex = PushData(definition.FileNameDenyRegex,
                                                        definition.SharedStrings,
                                                        sharedStrings);

                definition.FileNameAllowRegex = PushData(definition.FileNameAllowRegex,
                                                         definition.SharedStrings,
                                                         sharedStrings);

                foreach (MatchExpression matchExpression in definition.MatchExpressions)
                {
                    if (matchExpression.RuleEnabledState == RuleEnabledState.Disabled) { continue; }

                    if (matchExpression.SingleLineRegexes?.Count > 0)
                    {
                        for (int i = 0; i < matchExpression.SingleLineRegexes.Count; i++)
                        {
                            string current = matchExpression.SingleLineRegexes[i];
                            matchExpression.SingleLineRegexes[i] =
                                PushData(current,
                                         definition.SharedStrings,
                                         sharedStrings);
                        }
                    }

                    if (matchExpression.IntrafileRegexes?.Count > 0)
                    {
                        matchExpression.IntrafileRegexMetadata =
                            new List<RegexMetadata>(matchExpression.IntrafileRegexes.Count);

                        for (int i = 0; i < matchExpression.IntrafileRegexes.Count; i++)
                        {
                            string regex = matchExpression.IntrafileRegexes[i];
                            matchExpression.IntrafileRegexMetadata.Add(RegexMetadata.None);

                            if (regex.StartsWith("?"))
                            {
                                matchExpression.IntrafileRegexMetadata[i] = RegexMetadata.Optional;

                                // Once we record this regex as optional, mark it with the standard
                                // prefix so that the rest of processing happens as usual.
                                matchExpression.IntrafileRegexes[i] = "$" + regex.Substring(1);
                            }

                            matchExpression.IntrafileRegexes[i] =
                                PushData(matchExpression.IntrafileRegexes[i],
                                         definition.SharedStrings,
                                         sharedStrings);
                        }
                    }

                    matchExpression.FileNameDenyRegex = PushData(matchExpression.FileNameDenyRegex,
                                                                 definition.SharedStrings,
                                                                 sharedStrings);

                    matchExpression.FileNameDenyRegex ??= definition.FileNameDenyRegex;

                    matchExpression.FileNameAllowRegex = PushData(matchExpression.FileNameAllowRegex,
                                                                 definition.SharedStrings,
                                                                 sharedStrings);

                    matchExpression.FileNameAllowRegex ??= definition.FileNameAllowRegex;

                    matchExpression.ContentsRegex = PushData(matchExpression.ContentsRegex,
                                                             definition.SharedStrings,
                                                             sharedStrings);

                    matchExpression.Id ??= definition.Id;
                    matchExpression.Name ??= definition.Name;
                    matchExpression.HelpUri ??= definition.HelpUri;
                    matchExpression.Message ??= definition.Message;
                    matchExpression.Description ??= definition.Description;

                    if (matchExpression.Level == FailureLevel.None)
                    {
                        matchExpression.Level = definition.Level;
                    }

                    if (matchExpression.Kind == ResultKind.None)
                    {
                        matchExpression.Kind = definition.Kind;
                    }

                    UpdateLevelKind(matchExpression);

                    if (!idToExpressionsMap.TryGetValue(matchExpression.Id, out List<MatchExpression> cachedMatchExpressions))
                    {
                        cachedMatchExpressions = idToExpressionsMap[matchExpression.Id] = new List<MatchExpression>();
                    }

                    cachedMatchExpressions.Add(matchExpression);
                }
                extensionsCount++;
            }

            var searchDefinitions = new SearchDefinitions
            {
                Definitions = new List<SearchDefinition>(),
            };

            foreach (KeyValuePair<string, List<MatchExpression>> kv in idToExpressionsMap)
            {
                string ruleId = kv.Key;
                List<MatchExpression> matchExpressions = kv.Value;

                var definition = new SearchDefinition
                {
                    Id = matchExpressions[0].Id,
                    Name = matchExpressions[0].Name,
                    MatchExpressions = matchExpressions,
                    HelpUri = matchExpressions[0].HelpUri,
                    Description = matchExpressions[0].Description,
                };

                searchDefinitions.Definitions.Add(definition);
            }

#if DEBUG
            ValidateSharedStringsExpansion(searchDefinitions);
#endif

            return searchDefinitions;
        }

        internal static void UpdateLevelKind(MatchExpression matchExpression)
        {
            // If level has any value other than "none" and kind is present, then kind SHALL have the value "fail".
            if (matchExpression.Level != FailureLevel.None)
            {
                matchExpression.Kind = ResultKind.Fail;
            }

            if (matchExpression.Kind != ResultKind.Fail)
            {
                matchExpression.Level = FailureLevel.None;
            }
        }

        internal static Dictionary<string, string> LoadSharedStrings(string sharedStringsFullPath, IFileSystem fileSystem)
        {
            var result = new Dictionary<string, string>();

            foreach (string fileLine in fileSystem.FileReadAllLines(sharedStringsFullPath))
            {
                string line = fileLine.Trim();
                if (string.IsNullOrEmpty(line) || line.StartsWith("#")) { continue; }

                int index = line.IndexOf('=');
                if (index == -1) { ThrowInvalidSharedStringsEntry(line); }

                string key = line.Substring(0, index);
                if (!key.StartsWith("$")) { ThrowInvalidSharedStringsEntry(line); }

                result[key] = line.Substring(key.Length + "=".Length);
            }

            return result;
        }

        public override AnalyzeContext InitializeGlobalContextFromOptions(AnalyzeOptions options, ref AnalyzeContext context)
        {
            context = base.InitializeGlobalContextFromOptions(options, ref context);

            context.Retry = options.Retry != null ? options.Retry.Value : context.Retry;
            context.RedactSecrets = options.RedactSecrets != null ? options.RedactSecrets.Value : context.RedactSecrets;
            context.EnhancedReporting = options.EnhancedReporting != null ? options.EnhancedReporting.Value : context.EnhancedReporting;
            context.DynamicValidation = options.DynamicValidation != null ? options.DynamicValidation.Value : context.DynamicValidation;
            context.DisableDynamicValidationCaching = options.DisableDynamicValidationCaching != null ? options.DisableDynamicValidationCaching.Value : context.DisableDynamicValidationCaching;

            if (options.VersionControlProvenance != null)
            {
                context.VersionControlProvenance =
                    JsonConvert.DeserializeObject<List<VersionControlDetails>>(options.VersionControlProvenance);
            }

            context.PluginFilePaths = options.PluginFilePaths.Any() ? new StringSet(options.PluginFilePaths) : context.PluginFilePaths;
            return context;
        }

        public override AnalyzeContext ValidateContext(AnalyzeContext context)
        {
            context = base.ValidateContext(context);

            if (ValidateFiles(context, context.PluginFilePaths, shouldExist: true))
            {

            }

            return context;
        }

        protected override ISet<Skimmer<AnalyzeContext>> CreateSkimmers(AnalyzeContext context)
        {
            ISet<Skimmer<AnalyzeContext>> aggregatedSkimmers = new HashSet<Skimmer<AnalyzeContext>>();

            if (context.Skimmers != null)
            {
                aggregatedSkimmers = new HashSet<Skimmer<AnalyzeContext>>(context.Skimmers);
            }

            if (context.PluginFilePaths?.Any() == true)
            {
                foreach (Skimmer<AnalyzeContext> skimmer in CreateSkimmersFromDefinitionsFiles(context.FileSystem, context.PluginFilePaths, Tool))
                {
                    aggregatedSkimmers.Add(skimmer);
                }
            }

            return aggregatedSkimmers;
        }

        protected override AnalyzeContext DetermineApplicabilityAndAnalyze(AnalyzeContext context, IEnumerable<Skimmer<AnalyzeContext>> skimmers, ISet<string> disabledSkimmers)
        {
            /*bool shouldScanThisFile = RegexEngine.IsMatch(context.CurrentTarget.Contents, m1);
            shouldScanThisFile |= RegexEngine.IsMatch(context.CurrentTarget.Contents, m2);
            shouldScanThisFile |= RegexEngine.IsMatch(context.CurrentTarget.Contents, m3);
            shouldScanThisFile |= RegexEngine.IsMatch(context.CurrentTarget.Contents, m4);*/
            // regular monster regex
            /*if (!RegexEngine.IsMatch(context.CurrentTarget.Contents, monsterRegex))
            {
                return context;
            }*/

            // 4 x 4 monster regex
            /*if (!RegexEngine.IsMatch(context.CurrentTarget.Contents, m1) &&
                !RegexEngine.IsMatch(context.CurrentTarget.Contents, m2) &&
                !RegexEngine.IsMatch(context.CurrentTarget.Contents, m3) &&
                !RegexEngine.IsMatch(context.CurrentTarget.Contents, m4))
            {
                return context;
            }*/


            // 8x8 monster regex
            if (!RegexEngine.IsMatch(context.CurrentTarget.Contents, m81) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m82) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m83) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m84) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m85) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m86) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m87) &&
            !RegexEngine.IsMatch(context.CurrentTarget.Contents, m88))
            {
                return context;
            }

            context = base.DetermineApplicabilityAndAnalyze(context, skimmers, disabledSkimmers);

            ICollection<IList<Tuple<Result, int?>>> resultLists = ((CachingLogger)context.Logger).Results?.Values;

            if (resultLists != null && context.CurrentTarget.Uri.ToString().EndsWith(".json", StringComparison.OrdinalIgnoreCase))
            {
                var aggregatedResults = new List<Result>();
                foreach (IList<Tuple<Result, int?>> resultList in resultLists)
                {
                    foreach (Tuple<Result, int?> tuple in resultList)
                    {
                        aggregatedResults.Add(tuple.Item1);
                    }
                }

                if (aggregatedResults.Count > 0)
                {
                    var jsonLogicalLocationProcessor = new JsonLogicalLocationProcessor();
                    jsonLogicalLocationProcessor.Process(aggregatedResults, context.CurrentTarget.Contents, context.Logger.FileRegionsCache);
                }
            }

            return context;
        }

#if DEBUG
        private static void ValidateSharedStringsExpansion(SearchDefinitions searchDefinitions)
        {
            foreach (SearchDefinition definition in searchDefinitions.Definitions)
            {
                ValidateSharedStringsExpansion(definition.FileNameDenyRegex);
                ValidateSharedStringsExpansion(definition.FileNameAllowRegex);

                foreach (MatchExpression matchExpression in definition.MatchExpressions)
                {
                    ValidateSharedStringsExpansion(matchExpression.ContentsRegex);
                    ValidateSharedStringsExpansion(matchExpression.FileNameDenyRegex);
                    ValidateSharedStringsExpansion(matchExpression.FileNameAllowRegex);
                }
            }
        }

        private static void ValidateSharedStringsExpansion(string text)
        {
            if (string.IsNullOrEmpty(text)) { return; }

            if (text.StartsWith("access_token"))
            {
                return;
            }

            // We failed to expand a pattern that is entirely rendered
            // via a shared string.
            Debug.Assert(!text.StartsWith("$"),
                         $"Failed to expand shared string: '{text}'");
        }

#endif

        private static string PushData(string text, params Dictionary<string, string>[] sharedStringsDictionaries)
        {
            if (text?.Contains("$") != true)
            {
                return text;
            }

            foreach (Dictionary<string, string> sharedStrings in sharedStringsDictionaries)
            {
                if (sharedStrings == null)
                {
                    continue;
                }

                if (sharedStrings.TryGetValue(text, out string replaceText))
                {
                    text = replaceText;
                    break;
                }

                foreach (string key in sharedStrings.Keys)
                {
                    text = text.Replace(key, sharedStrings[key]);
                }
            }

            return text;
        }

        private static void ThrowInvalidSharedStringsEntry(string line)
        {
            throw new InvalidOperationException(
                $"Malformed shared strings entry. Every shared string should consist of a " +
                $"key name (prefixed with $) followed by an equals sign and the string value " +
                $"(e.g., $MyKey=MyValue). The malformed line was: {line}");
        }
    }
}
