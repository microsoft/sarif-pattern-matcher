#
# This file contains key values pairs which are used to expand variable references in
# the JSON-based regex pattern definition files. This is useful both to share common
# regex patterns across multiple rules but also to avoid the complexities of escaping
# JSON string literals. The strings below are directly testable in web sites such as 
# reg101.com.
#
# Shared strings can be assembled even within this file as long as any shared pattern
# in a strings only contains variables which are defined earlier in the file. So, 
# a pattern like this is ok (but these lines in reverse order are not).
#
# $MyExample=[a-z]
# $MyExpandedExample=($MyExample|[0-9])
#
# Blank lines are ignored when parsing, as are lines that begin with a '#' character.
# Leading spaces are trimmed at parse time, allowing for indentation.

# Common patterns for file allow and deny lists.
#
  $CSourceFiles=(?i)\.(c|cpp|cxx)$
  $BinaryFiles=(?i)\.(bmp|dll|exe|gif|jpe?g|lock|pack|png|psd|tar\.gz|tiff?|ttf|wmf|xcf|zip)$
  $SourceFiles=(?i)\.(azure|bat|c|cmd|config|cpp|cs|cscfg|definitions|dtsx|h|hxx|hpp|ini|java|jsx?|json|keys|kt|loadtest|m|md|php|properties|ps1|psm1|pubxml|py|resx|sample|sql|ste|swift|test|tsx?|txt|waz|xml)$

$SEC105/001.allocator=[^\w_]__allocator[^\w_]
$SEC105/002.analysisassume=[^\w_]__analysis_assume[^\w_]
$SEC105/003.assumebound=[^\w_]__assume_bound[^\w_]
$SEC105/004.bcount=[^\w_]__bcount[^\w_]
$SEC105/005.bcountopt=[^\w_]__bcount_opt[^\w_]
$SEC105/006.bound=[^\w_]__bound[^\w_]
$SEC105/007.bytereadableTo=[^\w_]__byte_readableTo[^\w_]
$SEC105/008.bytewritableTo=[^\w_]__byte_writableTo[^\w_]
$SEC105/009.checkReturn=[^\w_]__checkReturn[^\w_]
$SEC105/010.controlentrypoint=[^\w_]__control_entrypoint[^\w_]
$SEC105/011.dataentrypoint=[^\w_]__data_entrypoint[^\w_]
$SEC105/012.deref=[^\w_]__deref[^\w_]
$SEC105/013.derefbcount=[^\w_]__deref_bcount[^\w_]
$SEC105/014.derefecount=[^\w_]__deref_ecount[^\w_]
$SEC105/015.derefecountopt=[^\w_]__deref_ecount_opt[^\w_]
$SEC105/016.derefin=[^\w_]__deref_in[^\w_]
$SEC105/017.derefinbcountopt=[^\w_]__deref_in_bcount_opt[^\w_]
$SEC105/018.derefinoptout=[^\w_]__deref_in_opt_out[^\w_]
$SEC105/019.derefinrange=[^\w_]__deref_in_range[^\w_]
$SEC105/020.derefinout=[^\w_]__deref_inout[^\w_]
$SEC105/021.derefinoutbcount=[^\w_]__deref_inout_bcount[^\w_]
$SEC105/022.derefinoutbcountopt=[^\w_]__deref_inout_bcount_opt[^\w_]
$SEC105/023.derefinoutbcountpart=[^\w_]__deref_inout_bcount_part[^\w_]
$SEC105/024.derefinoutecount=[^\w_]__deref_inout_ecount[^\w_]
$SEC105/025.derefinoutecountpart=[^\w_]__deref_inout_ecount_part[^\w_]
$SEC105/026.derefinoutecountz=[^\w_]__deref_inout_ecount_z[^\w_]
$SEC105/027.derefinoutopt=[^\w_]__deref_inout_opt[^\w_]
$SEC105/028.derefinoutrange=[^\w_]__deref_inout_range[^\w_]
$SEC105/029.derefinoutxcount=[^\w_]__deref_inout_xcount[^\w_]
$SEC105/030.derefinoutz=[^\w_]__deref_inout_z[^\w_]
$SEC105/031.derefoptinout=[^\w_]__deref_opt_inout[^\w_]
$SEC105/032.derefoptinoutbcountfull=[^\w_]__deref_opt_inout_bcount_full[^\w_]
$SEC105/033.derefoptinoutbcountpartopt=[^\w_]__deref_opt_inout_bcount_part_opt[^\w_]
$SEC105/034.derefoptinoutopt=[^\w_]__deref_opt_inout_opt[^\w_]
$SEC105/035.derefoptout=[^\w_]__deref_opt_out[^\w_]
$SEC105/036.derefoptoutbcount=[^\w_]__deref_opt_out_bcount[^\w_]
$SEC105/037.derefoptoutbcountfull=[^\w_]__deref_opt_out_bcount_full[^\w_]
$SEC105/038.derefoptoutbcountopt=[^\w_]__deref_opt_out_bcount_opt[^\w_]
$SEC105/039.derefoptoutecount=[^\w_]__deref_opt_out_ecount[^\w_]
$SEC105/040.derefoptoutopt=[^\w_]__deref_opt_out_opt[^\w_]
$SEC105/041.derefoptoutxcount=[^\w_]__deref_opt_out_xcount[^\w_]
$SEC105/042.derefoptoutz=[^\w_]__deref_opt_out_z[^\w_]
$SEC105/043.derefoptoutzopt=[^\w_]__deref_opt_out_z_opt[^\w_]
$SEC105/044.derefout=[^\w_]__deref_out[^\w_]
$SEC105/045.derefoutbcount=[^\w_]__deref_out_bcount[^\w_]
$SEC105/046.derefoutbcountfull=[^\w_]__deref_out_bcount_full[^\w_]
$SEC105/047.derefoutbcountfullopt=[^\w_]__deref_out_bcount_full_opt[^\w_]
$SEC105/048.derefoutbcountopt=[^\w_]__deref_out_bcount_opt[^\w_]
$SEC105/049.derefoutbcountpart=[^\w_]__deref_out_bcount_part[^\w_]
$SEC105/050.derefoutecount=[^\w_]__deref_out_ecount[^\w_]
$SEC105/051.derefoutecountfull=[^\w_]__deref_out_ecount_full[^\w_]
$SEC105/052.derefoutecountfullopt=[^\w_]__deref_out_ecount_full_opt[^\w_]
$SEC105/053.derefoutecountopt=[^\w_]__deref_out_ecount_opt[^\w_]
$SEC105/054.derefoutecountpart=[^\w_]__deref_out_ecount_part[^\w_]
$SEC105/055.derefoutecountzopt=[^\w_]__deref_out_ecount_z_opt[^\w_]
$SEC105/056.derefoutopt=[^\w_]__deref_out_opt[^\w_]
$SEC105/057.derefoutrange=[^\w_]__deref_out_range[^\w_]
$SEC105/058.derefoutxcount=[^\w_]__deref_out_xcount[^\w_]
$SEC105/059.derefoutxcountpart=[^\w_]__deref_out_xcount_part[^\w_]
$SEC105/060.derefoutz=[^\w_]__deref_out_z[^\w_]
$SEC105/061.derefoutzopt=[^\w_]__deref_out_z_opt[^\w_]
$SEC105/062.ecount=[^\w_]__ecount[^\w_]
$SEC105/063.elemreadableTo=[^\w_]__elem_readableTo[^\w_]
$SEC105/064.elemwritableTo=[^\w_]__elem_writableTo[^\w_]
$SEC105/065.exceptthat=[^\w_]__exceptthat[^\w_]
$SEC105/066.fieldbcount=[^\w_]__field_bcount[^\w_]
$SEC105/067.fieldbcountfull=[^\w_]__field_bcount_full[^\w_]
$SEC105/068.fieldbcountopt=[^\w_]__field_bcount_opt[^\w_]
$SEC105/069.fieldbcountpart=[^\w_]__field_bcount_part[^\w_]
$SEC105/070.fieldbcountpartopt=[^\w_]__field_bcount_part_opt[^\w_]
$SEC105/071.fieldecount=[^\w_]__field_ecount[^\w_]
$SEC105/072.fieldecountfull=[^\w_]__field_ecount_full[^\w_]
$SEC105/073.fieldecountopt=[^\w_]__field_ecount_opt[^\w_]
$SEC105/074.fieldecountpart=[^\w_]__field_ecount_part[^\w_]
$SEC105/075.fieldnullterminated=[^\w_]__field_nullterminated[^\w_]
$SEC105/076.fieldrange=[^\w_]__field_range[^\w_]
$SEC105/077.formatstring=[^\w_]__format_string[^\w_]
$SEC105/078.gdientry=[^\w_]__gdi_entry[^\w_]
$SEC105/079.in=[^\w_]__in[^\w_]
$SEC105/080.inbcount=[^\w_]__in_bcount[^\w_]
$SEC105/081.inbcountopt=[^\w_]__in_bcount_opt[^\w_]
$SEC105/082.inbcountz=[^\w_]__in_bcount_z[^\w_]
$SEC105/083.inbound=[^\w_]__in_bound[^\w_]
$SEC105/084.inecount=[^\w_]__in_ecount[^\w_]
$SEC105/085.inecountopt=[^\w_]__in_ecount_opt[^\w_]
$SEC105/086.inecountorz=[^\w_]__in_ecount_or_z[^\w_]
$SEC105/087.inecountz=[^\w_]__in_ecount_z[^\w_]
$SEC105/088.inopt=[^\w_]__in_opt[^\w_]
$SEC105/089.inrange=[^\w_]__in_range[^\w_]
$SEC105/090.inxcount=[^\w_]__in_xcount[^\w_]
$SEC105/091.inxcountopt=[^\w_]__in_xcount_opt[^\w_]
$SEC105/092.inz=[^\w_]__in_z[^\w_]
$SEC105/093.inzopt=[^\w_]__in_z_opt[^\w_]
$SEC105/094.inexpressiblereadableTo=[^\w_]__inexpressible_readableTo[^\w_]
$SEC105/095.inout=[^\w_]__inout[^\w_]
$SEC105/096.inoutbcount=[^\w_]__inout_bcount[^\w_]
$SEC105/097.inoutbcountfull=[^\w_]__inout_bcount_full[^\w_]
$SEC105/098.inoutbcountfullopt=[^\w_]__inout_bcount_full_opt[^\w_]
$SEC105/099.inoutbcountopt=[^\w_]__inout_bcount_opt[^\w_]
$SEC105/100.inoutbcountpart=[^\w_]__inout_bcount_part[^\w_]
$SEC105/101.inoutbcountpartopt=[^\w_]__inout_bcount_part_opt[^\w_]
$SEC105/102.inoutbcountz=[^\w_]__inout_bcount_z[^\w_]
$SEC105/103.inoutecount=[^\w_]__inout_ecount[^\w_]
$SEC105/104.inoutecountfull=[^\w_]__inout_ecount_full[^\w_]
$SEC105/105.inoutecountfullopt=[^\w_]__inout_ecount_full_opt[^\w_]
$SEC105/106.inoutecountopt=[^\w_]__inout_ecount_opt[^\w_]
$SEC105/107.inoutecountpart=[^\w_]__inout_ecount_part[^\w_]
$SEC105/108.inoutecountpartopt=[^\w_]__inout_ecount_part_opt[^\w_]
$SEC105/109.inoutecountz=[^\w_]__inout_ecount_z[^\w_]
$SEC105/110.inoutopt=[^\w_]__inout_opt[^\w_]
$SEC105/111.inoutxcount=[^\w_]__inout_xcount[^\w_]
$SEC105/112.inoutxcountopt=[^\w_]__inout_xcount_opt[^\w_]
$SEC105/113.inoutz=[^\w_]__inout_z[^\w_]
$SEC105/114.internalkerneldriver=[^\w_]__internal_kernel_driver[^\w_]
$SEC105/115.kerneldriver=[^\w_]__kernel_driver[^\w_]
$SEC105/116.maybenull=[^\w_]__maybenull[^\w_]
$SEC105/117.maybevalid=[^\w_]__maybevalid[^\w_]
$SEC105/118.notnull=[^\w_]__notnull[^\w_]
$SEC105/119.notvalid=[^\w_]__notvalid[^\w_]
$SEC105/120.null=[^\w_]__null[^\w_]
$SEC105/121.nullnullterminated=[^\w_]__nullnullterminated[^\w_]
$SEC105/122.nullterminated=[^\w_]__nullterminated[^\w_]
$SEC105/123.onfailure=[^\w_]__on_failure[^\w_]
$SEC105/124.out=[^\w_]__out[^\w_]
$SEC105/125.outawcount=[^\w_]__out_awcount[^\w_]
$SEC105/126.outbcount=[^\w_]__out_bcount[^\w_]
$SEC105/127.outbcountfull=[^\w_]__out_bcount_full[^\w_]
$SEC105/128.outbcountfullopt=[^\w_]__out_bcount_full_opt[^\w_]
$SEC105/129.outbcountopt=[^\w_]__out_bcount_opt[^\w_]
$SEC105/130.outbcountpart=[^\w_]__out_bcount_part[^\w_]
$SEC105/131.outbcountpartopt=[^\w_]__out_bcount_part_opt[^\w_]
$SEC105/132.outbcountpartz=[^\w_]__out_bcount_part_z[^\w_]
$SEC105/133.outbcountzopt=[^\w_]__out_bcount_z_opt[^\w_]
$SEC105/134.outecount=[^\w_]__out_ecount[^\w_]
$SEC105/135.outecountfull=[^\w_]__out_ecount_full[^\w_]
$SEC105/136.outecountfullopt=[^\w_]__out_ecount_full_opt[^\w_]
$SEC105/137.outecountfullz=[^\w_]__out_ecount_full_z[^\w_]
$SEC105/138.outecountopt=[^\w_]__out_ecount_opt[^\w_]
$SEC105/139.outecountpart=[^\w_]__out_ecount_part[^\w_]
$SEC105/140.outecountpartopt=[^\w_]__out_ecount_part_opt[^\w_]
$SEC105/141.outecountpartz=[^\w_]__out_ecount_part_z[^\w_]
$SEC105/142.outecountpartzopt=[^\w_]__out_ecount_part_z_opt[^\w_]
$SEC105/143.outecountz=[^\w_]__out_ecount_z[^\w_]
$SEC105/144.outecountzopt=[^\w_]__out_ecount_z_opt[^\w_]
$SEC105/145.outopt=[^\w_]__out_opt[^\w_]
$SEC105/146.outrange=[^\w_]__out_range[^\w_]
$SEC105/147.outvalidated=[^\w_]__out_validated[^\w_]
$SEC105/148.outxcount=[^\w_]__out_xcount[^\w_]
$SEC105/149.outxcountopt=[^\w_]__out_xcount_opt[^\w_]
$SEC105/150.outxcountpartopt=[^\w_]__out_xcount_part_opt[^\w_]
$SEC105/151.outz=[^\w_]__out_z[^\w_]
$SEC105/152.outzopt=[^\w_]__out_z_opt[^\w_]
$SEC105/153.possiblynotnullterminated=[^\w_]__possibly_notnullterminated[^\w_]
$SEC105/154.post=[^\w_]__post[^\w_]
$SEC105/155.postinvalid=[^\w_]__post_invalid[^\w_]
$SEC105/156.postnullnullterminated=[^\w_]__post_nullnullterminated[^\w_]
$SEC105/157.pre=[^\w_]__pre[^\w_]
$SEC105/158.precond=[^\w_]__precond[^\w_]
$SEC105/159.prefastoperatornewnull=[^\w_]__prefast_operator_new_null[^\w_]
$SEC105/160.range=[^\w_]__range[^\w_]
$SEC105/161.refparam=[^\w_]__refparam[^\w_]
$SEC105/162.reserved=[^\w_]__reserved[^\w_]
$SEC105/163.SALHFULLVER=[^\w_]__SAL_H_FULL_VER[^\w_]
$SEC105/164.specstrings=[^\w_]__specstrings[^\w_]
$SEC105/165.structbcount=[^\w_]__struct_bcount[^\w_]
$SEC105/166.structxcount=[^\w_]__struct_xcount[^\w_]
$SEC105/167.success=[^\w_]__success[^\w_]
$SEC105/168.typefix=[^\w_]__typefix[^\w_]
$SEC105/169.usercode=[^\w_]__user_code[^\w_]
$SEC105/170.userdriver=[^\w_]__user_driver[^\w_]
$SEC105/171.writableTo=[^\w_]__writableTo[^\w_]
$SEC105/172.valid=[^\w_]__valid[^\w_]
$SEC105/173.xcount=[^\w_]__xcount[^\w_]
$SEC105/174.guardedby=[^\w_]__guarded_by[^\w_]
$SEC105/175.writeguardedby=[^\w_]__write_guarded_by[^\w_]
$SEC105/176.interlocked=[^\w_]__interlocked[^\w_]
$SEC105/177.requireslockheld=[^\w_]__requires_lock_held[^\w_]
$SEC105/178.requiresexclusivelockheld=[^\w_]__requires_exclusive_lock_held[^\w_]
$SEC105/179.requiressharedlockheld=[^\w_]__requires_shared_lock_held[^\w_]
$SEC105/180.requireslocknotheld=[^\w_]__requires_lock_not_held[^\w_]
$SEC105/181.requiresnolocksheld=[^\w_]__requires_no_locks_held[^\w_]
$SEC105/182.acquireslock=[^\w_]__acquires_lock[^\w_]
$SEC105/183.acquiresexclusivelock=[^\w_]__acquires_exclusive_lock[^\w_]
$SEC105/184.acquiressharedlock=[^\w_]__acquires_shared_lock[^\w_]
$SEC105/185.releaseslock=[^\w_]__releases_lock[^\w_]
$SEC105/186.releasesexclusivelock=[^\w_]__releases_exclusive_lock[^\w_]
$SEC105/187.releasessharedlock=[^\w_]__releases_shared_lock[^\w_]
$SEC105/188.haslockproperty=[^\w_]__has_lock_property[^\w_]
$SEC105/189.declarelocklevel=[^\w_]__declare_lock_level[^\w_]
$SEC105/190.haslocklevel=[^\w_]__has_lock_level[^\w_]
$SEC105/191.internallocklevelorder=[^\w_]__internal_lock_level_order[^\w_]
$SEC105/192.locklevelorder=[^\w_]__lock_level_order[^\w_]
$SEC105/193.nocompetingthread=[^\w_]__no_competing_thread[^\w_]
$SEC105/194.analysisassumelockacquired=[^\w_]__analysis_assume_lock_acquired[^\w_]
$SEC105/195.analysisassumelockreleased=[^\w_]__analysis_assume_lock_released[^\w_]
$SEC105/196.functionignorelockchecking=[^\w_]__function_ignore_lock_checking[^\w_]
$SEC105/197.analysissuppresslockchecking=[^\w_]__analysis_suppress_lock_checking[^\w_]
$SEC105/198.drvacquiresCancelSpinLock=[^\w_]__drv_acquiresCancelSpinLock[^\w_]
$SEC105/199.drvreleasesCancelSpinLock=[^\w_]__drv_releasesCancelSpinLock[^\w_]
$SEC105/200.drvmustHoldCancelSpinLock=[^\w_]__drv_mustHoldCancelSpinLock[^\w_]
$SEC105/201.drvneverHoldCancelSpinLock=[^\w_]__drv_neverHoldCancelSpinLock[^\w_]
$SEC105/202.drvacquiresCriticalRegion=[^\w_]__drv_acquiresCriticalRegion[^\w_]
$SEC105/203.drvreleasesCriticalRegion=[^\w_]__drv_releasesCriticalRegion[^\w_]
$SEC105/204.drvmustHoldCriticalRegion=[^\w_]__drv_mustHoldCriticalRegion[^\w_]
$SEC105/205.drvneverHoldCriticalRegion=[^\w_]__drv_neverHoldCriticalRegion[^\w_]
$SEC105/206.drvacquiresPriorityRegion=[^\w_]__drv_acquiresPriorityRegion[^\w_]
$SEC105/207.drvreleasesPriorityRegion=[^\w_]__drv_releasesPriorityRegion[^\w_]
$SEC105/208.drvmustHoldPriorityRegion=[^\w_]__drv_mustHoldPriorityRegion[^\w_]
$SEC105/209.drvneverHoldPriorityRegion=[^\w_]__drv_neverHoldPriorityRegion[^\w_]
$SEC105/210.drvinterlocked=[^\w_]__drv_interlocked[^\w_]
$SEC105/211.drvacquiresResource=[^\w_]__drv_acquiresResource[^\w_]
$SEC105/212.drvreleasesResource=[^\w_]__drv_releasesResource[^\w_]
$SEC105/213.drvacquiresResourceGlobal=[^\w_]__drv_acquiresResourceGlobal[^\w_]
$SEC105/214.drvreleasesResourceGlobal=[^\w_]__drv_releasesResourceGlobal[^\w_]
$SEC105/215.drvmustHold=[^\w_]__drv_mustHold[^\w_]
$SEC105/216.drvmustHoldGlobal=[^\w_]__drv_mustHoldGlobal[^\w_]
$SEC105/217.drvneverHold=[^\w_]__drv_neverHold[^\w_]
$SEC105/218.drvneverHoldGlobal=[^\w_]__drv_neverHoldGlobal[^\w_]
$SEC105/219.drvacquiresExclusiveResource=[^\w_]__drv_acquiresExclusiveResource[^\w_]
$SEC105/220.drvreleasesExclusiveResource=[^\w_]__drv_releasesExclusiveResource[^\w_]
$SEC105/221.drvacquiresExclusiveResourceGlobal=[^\w_]__drv_acquiresExclusiveResourceGlobal[^\w_]
$SEC105/222.drvreleasesExclusiveResourceGlobal=[^\w_]__drv_releasesExclusiveResourceGlobal[^\w_]
$SEC105/223.drvat=[^\w_]__drv_at[^\w_]
$SEC105/224.drvvalueIs=[^\w_]__drv_valueIs[^\w_]
$SEC105/225.drvwhen=[^\w_]__drv_when[^\w_]
$SEC105/226.drvsetsIRQL=[^\w_]__drv_setsIRQL[^\w_]
$SEC105/227.drvraisesIRQL=[^\w_]__drv_raisesIRQL[^\w_]
$SEC105/228.drvrequiresIRQL=[^\w_]__drv_requiresIRQL[^\w_]
$SEC105/229.drvmaxIRQL=[^\w_]__drv_maxIRQL[^\w_]
$SEC105/230.drvminIRQL=[^\w_]__drv_minIRQL[^\w_]
$SEC105/231.drvsavesIRQL=[^\w_]__drv_savesIRQL[^\w_]
$SEC105/232.drvsavesIRQLGlobal=[^\w_]__drv_savesIRQLGlobal[^\w_]
$SEC105/233.drvrestoresIRQL=[^\w_]__drv_restoresIRQL[^\w_]
$SEC105/234.drvrestoresIRQLGlobal=[^\w_]__drv_restoresIRQLGlobal[^\w_]
$SEC105/235.drvminFunctionIRQL=[^\w_]__drv_minFunctionIRQL[^\w_]
$SEC105/236.drvmaxFunctionIRQL=[^\w_]__drv_maxFunctionIRQL[^\w_]
$SEC105/237.drvsameIRQL=[^\w_]__drv_sameIRQL[^\w_]
$SEC105/238.drvuseCancelIRQL=[^\w_]__drv_useCancelIRQL[^\w_]
$SEC105/239.drvisCancelIRQL=[^\w_]__drv_isCancelIRQL[^\w_]
$SEC105/240.drvclearDoInit=[^\w_]__drv_clearDoInit[^\w_]
$SEC105/241.drvIoGetDmaAdapter=[^\w_]__drv_IoGetDmaAdapter[^\w_]
$SEC105/242.drvfloatSaved=[^\w_]__drv_floatSaved[^\w_]
$SEC105/243.drvfloatRestored=[^\w_]__drv_floatRestored[^\w_]
$SEC105/244.drvfloatUsed=[^\w_]__drv_floatUsed[^\w_]
$SEC105/245.drvdispatchType=[^\w_]__drv_dispatchType[^\w_]
$SEC105/246.drvfunctionClass=[^\w_]__drv_functionClass[^\w_]
$SEC105/247.drvformatString=[^\w_]__drv_formatString[^\w_]
$SEC105/248.drvderef=[^\w_]__drv_deref[^\w_]
$SEC105/249.drvret=[^\w_]__drv_ret[^\w_]
$SEC105/250.drvfun=[^\w_]__drv_fun[^\w_]
$SEC105/251.drvoutderef=[^\w_]__drv_out_deref[^\w_]
$SEC105/252.drvarg=[^\w_]__drv_arg[^\w_]
$SEC105/253.drvconstant=[^\w_]__drv_constant[^\w_]
$SEC105/254.drvnonConstant=[^\w_]__drv_nonConstant[^\w_]
$SEC105/255.drvin=[^\w_]__drv_in[^\w_]
$SEC105/256.drvisObjectPointer=[^\w_]__drv_isObjectPointer[^\w_]
$SEC105/257.drvnotPointer=[^\w_]__drv_notPointer[^\w_]
$SEC105/258.drvinTry=[^\w_]__drv_inTry[^\w_]
$SEC105/259.drvModeimpl=[^\w_]__drv_Mode_impl[^\w_]
$SEC105/260.drvstrictType=[^\w_]__drv_strictType[^\w_]
$SEC105/261.drvstrictTypeMatch=[^\w_]__drv_strictTypeMatch[^\w_]
$SEC105/262.drvtypeCond=[^\w_]__drv_typeCond[^\w_]
$SEC105/263.drvtypeConst=[^\w_]__drv_typeConst[^\w_]
$SEC105/264.drvtypeExpr=[^\w_]__drv_typeExpr[^\w_]
$SEC105/265.Derefout=[^\w_]_Deref_out_[^\w_]
$SEC105/266.Derefoptout=[^\w_]_Deref_opt_out_[^\w_]
$SEC105/267.Derefoutopt=[^\w_]_Deref_out_opt_[^\w_]
$SEC105/268.Derefoptoutopt=[^\w_]_Deref_opt_out_opt_[^\w_]
$SEC105/269.Derefinoutzbytecapc=[^\w_]_Deref_inout_z_bytecap_c_[^\w_]
$SEC105/270.Derefinoutzcapc=[^\w_]_Deref_inout_z_cap_c_[^\w_]
$SEC105/271.Derefoutzbytecapc=[^\w_]_Deref_out_z_bytecap_c_[^\w_]
$SEC105/272.Derefoutzcapc=[^\w_]_Deref_out_z_cap_c_[^\w_]
$SEC105/273.Derefpostcap=[^\w_]_Deref_post_cap_[^\w_]
$SEC105/274.Derefpostcount=[^\w_]_Deref_post_count_[^\w_]
$SEC105/275.Derefpostcountc=[^\w_]_Deref_post_count_c_[^\w_]
$SEC105/276.Derefpostoptbytecountc=[^\w_]_Deref_post_opt_bytecount_c_[^\w_]
$SEC105/277.Derefpostoptbytecountx=[^\w_]_Deref_post_opt_bytecount_x_[^\w_]
$SEC105/278.Derefpostoptcap=[^\w_]_Deref_post_opt_cap_[^\w_]
$SEC105/279.Derefpostoptzcap=[^\w_]_Deref_post_opt_z_cap_[^\w_]
$SEC105/280.Derefpostzcap=[^\w_]_Deref_post_z_cap_[^\w_]
$SEC105/281.Inbytecount=[^\w_]_In_bytecount_[^\w_]
$SEC105/282.Inbytecountc=[^\w_]_In_bytecount_c_[^\w_]
$SEC105/283.Inbytecountx=[^\w_]_In_bytecount_x_[^\w_]
$SEC105/284.Incount=[^\w_]_In_count_[^\w_]
$SEC105/285.Incountc=[^\w_]_In_count_c_[^\w_]
$SEC105/286.Incountx=[^\w_]_In_count_x_[^\w_]
$SEC105/287.Inoptbytecount=[^\w_]_In_opt_bytecount_[^\w_]
$SEC105/288.Inoptcount=[^\w_]_In_opt_count_[^\w_]
$SEC105/289.Inoptcountc=[^\w_]_In_opt_count_c_[^\w_]
$SEC105/290.Inoptzcount=[^\w_]_In_opt_z_count_[^\w_]
$SEC105/291.Inptrdiffcount=[^\w_]_In_ptrdiff_count_[^\w_]
$SEC105/292.Inzcount=[^\w_]_In_z_count_[^\w_]
$SEC105/293.Inzcountc=[^\w_]_In_z_count_c_[^\w_]
$SEC105/294.Inoutbytecap=[^\w_]_Inout_bytecap_[^\w_]
$SEC105/295.Inoutbytecapx=[^\w_]_Inout_bytecap_x_[^\w_]
$SEC105/296.Inoutcap=[^\w_]_Inout_cap_[^\w_]
$SEC105/297.Inoutcapc=[^\w_]_Inout_cap_c_[^\w_]
$SEC105/298.Inoutcount=[^\w_]_Inout_count_[^\w_]
$SEC105/299.Inoutcountc=[^\w_]_Inout_count_c_[^\w_]
$SEC105/300.Inoutoptbytecap=[^\w_]_Inout_opt_bytecap_[^\w_]
$SEC105/301.Inoutoptcap=[^\w_]_Inout_opt_cap_[^\w_]
$SEC105/302.Inoutoptcapc=[^\w_]_Inout_opt_cap_c_[^\w_]
$SEC105/303.Inoutoptzbytecap=[^\w_]_Inout_opt_z_bytecap_[^\w_]
$SEC105/304.Inoutzbytecap=[^\w_]_Inout_z_bytecap_[^\w_]
$SEC105/305.Inoutzcap=[^\w_]_Inout_z_cap_[^\w_]
$SEC105/306.Inoutzcapc=[^\w_]_Inout_z_cap_c_[^\w_]
$SEC105/307.Outbytecap=[^\w_]_Out_bytecap_[^\w_]
$SEC105/308.Outbytecapc=[^\w_]_Out_bytecap_c_[^\w_]
$SEC105/309.Outbytecappostbytecount=[^\w_]_Out_bytecap_post_bytecount_[^\w_]
$SEC105/310.Outbytecapx=[^\w_]_Out_bytecap_x_[^\w_]
$SEC105/311.Outbytecapcount=[^\w_]_Out_bytecapcount_[^\w_]
$SEC105/312.Outcap=[^\w_]_Out_cap_[^\w_]
$SEC105/313.Outcapc=[^\w_]_Out_cap_c_[^\w_]
$SEC105/314.Outcapm=[^\w_]_Out_cap_m_[^\w_]
$SEC105/315.Outcappostcount=[^\w_]_Out_cap_post_count_[^\w_]
$SEC105/316.Outcapx=[^\w_]_Out_cap_x_[^\w_]
$SEC105/317.Outcapcount=[^\w_]_Out_capcount_[^\w_]
$SEC105/318.Outcapcountx=[^\w_]_Out_capcount_x_[^\w_]
$SEC105/319.Outoptbytecap=[^\w_]_Out_opt_bytecap_[^\w_]
$SEC105/320.Outoptbytecappostbytecount=[^\w_]_Out_opt_bytecap_post_bytecount_[^\w_]
$SEC105/321.Outoptbytecapcount=[^\w_]_Out_opt_bytecapcount_[^\w_]
$SEC105/322.Outoptcap=[^\w_]_Out_opt_cap_[^\w_]
$SEC105/323.Outoptcapc=[^\w_]_Out_opt_cap_c_[^\w_]
$SEC105/324.Outoptcapx=[^\w_]_Out_opt_cap_x_[^\w_]
$SEC105/325.Outoptcappostcount=[^\w_]_Out_opt_cap_post_count_[^\w_]
$SEC105/326.Outoptcapcount=[^\w_]_Out_opt_capcount_[^\w_]
$SEC105/327.Outoptzbytecap=[^\w_]_Out_opt_z_bytecap_[^\w_]
$SEC105/328.Outoptzbytecapc=[^\w_]_Out_opt_z_bytecap_c_[^\w_]
$SEC105/329.Outoptzcap=[^\w_]_Out_opt_z_cap_[^\w_]
$SEC105/330.Outoptzcappostcount=[^\w_]_Out_opt_z_cap_post_count_[^\w_]
$SEC105/331.Outzbytecap=[^\w_]_Out_z_bytecap_[^\w_]
$SEC105/332.Outzbytecapc=[^\w_]_Out_z_bytecap_c_[^\w_]
$SEC105/333.Outzcap=[^\w_]_Out_z_cap_[^\w_]
$SEC105/334.Outzcapc=[^\w_]_Out_z_cap_c_[^\w_]
$SEC105/335.Outzcappostcount=[^\w_]_Out_z_cap_post_count_[^\w_]
$SEC105/336.Outzcapx=[^\w_]_Out_z_cap_x_[^\w_]
$SEC105/337.Outzcapcount=[^\w_]_Out_z_capcount_[^\w_]
$SEC105/338.Postbytecount=[^\w_]_Post_bytecount_[^\w_]
$SEC105/339.Postbytecountc=[^\w_]_Post_bytecount_c_[^\w_]
$SEC105/340.Postbytecountx=[^\w_]_Post_bytecount_x_[^\w_]
$SEC105/341.Postcount=[^\w_]_Post_count_[^\w_]
$SEC105/342.Postcountc=[^\w_]_Post_count_c_[^\w_]
$SEC105/343.Postzcount=[^\w_]_Post_z_count_[^\w_]
$SEC105/344.Precapfor=[^\w_]_Pre_cap_for_[^\w_]
$SEC105/345.Precount=[^\w_]_Pre_count_[^\w_]
$SEC105/346.Preoptbytecountx=[^\w_]_Pre_opt_bytecount_x_[^\w_]
$SEC105/347.Prepostbytecountx=[^\w_]_Prepost_bytecount_x_[^\w_]
$SEC105/348.Prepostcount=[^\w_]_Prepost_count_[^\w_]
$SEC105/349.Prepostoptbytecountx=[^\w_]_Prepost_opt_bytecount_x_[^\w_]
$SEC105/350.Retbytecap=[^\w_]_Ret_bytecap_[^\w_]
$SEC105/351.Retcap=[^\w_]_Ret_cap_[^\w_]
$SEC105/352.Retcountx=[^\w_]_Ret_count_x_[^\w_]
$SEC105/353.Retoptbytecap=[^\w_]_Ret_opt_bytecap_[^\w_]
$SEC105/354.Retoptbytecapx=[^\w_]_Ret_opt_bytecap_x_[^\w_]
$SEC105/355.Retoptbytecountx=[^\w_]_Ret_opt_bytecount_x_[^\w_]
$SEC105/356.Retoptcount=[^\w_]_Ret_opt_count_[^\w_]
$SEC105/357.Retoptzcap=[^\w_]_Ret_opt_z_cap_[^\w_]
$SEC105/358.SAPreAccessSARead=\[SA_Pre\(Access=SA_Read \)\]
$SEC105/359.SAPreAccessSAWrite=\[SA_Pre\(Access=SA_Write\)\]
$SEC105/360.SAPreDeref0NullSAMaybe=\[SA_Pre\( Deref=\(0\), Null=SA_Maybe \)\]
$SEC105/361.SAPreDeref0NullTerminatedSAYes=\[SA_Pre\( Deref=\(0\), NullTerminated=SA_Yes \)\]
$SEC105/362.SAPreDeref0NullTerminatedSAYes=\[SA_Pre\( Deref=0, NullTerminated=SA_Yes \)\]
$SEC105/363.SAPreDeref0ValidSANo=\[SA_Pre\(Deref=0, Valid=SA_No\)\]
$SEC105/364.SAPreDeref0ValidElements1=\[SA_Pre \(Deref=0, ValidElements="%1"\)\]
$SEC105/365.SAPreDeref0ValidElements1=\[SA_Pre\( Deref=\(0\), ValidElements = "%1" \)\]
$SEC105/366.SAPreDeref0ValidElementsConst1=\[SA_Pre\( Deref=\(0\), ValidElementsConst=\(%1\) \)\]
$SEC105/367.SAPreDeref0WritableBytes1=\[SA_Pre\(Deref=0, WritableBytes = "%1"\)\]
$SEC105/368.SAPreDeref0WritableElements1=\[SA_Pre\( Deref=\(0\), WritableElements = "%1" \)\]
$SEC105/369.SAPreDeref0WritableElementsConst1=\[SA_Pre\( Deref=\(0\), WritableElementsConst=\(%1\) \)\]
$SEC105/370.SAPreDeref1AccessSAWrite=\[SA_Pre\( Deref=1, Access=SA_Write \)\]
$SEC105/371.SAPreDeref1AccessSARead=\[SA_Pre\( Deref=1, Access=SA_Read \)\]
$SEC105/372.SAPreDeref1AccessSAReadWrite=\[SA_Pre\( Deref=1, Access=SA_ReadWrite \)\]
$SEC105/373.SAPreDeref1NullSAYes=\[SA_Pre\( Deref=\(1\), Null=SA_Yes \)\]
$SEC105/374.SAPreDeref1NullTerminatedSAYes=\[SA_Pre\( Deref=\(1\), NullTerminated=SA_Yes \)\]
$SEC105/375.SAPreDeref1ValidSAYes=\[SA_Pre\( Deref=\(1\), Valid=SA_Yes \)\]
$SEC105/376.SAPreDeref1ValidSANo=\[SA_Pre\( Deref=\(1\), Valid=SA_No \)\]
$SEC105/377.SAPreDeref1ValidSANo=\[SA_Pre\(Deref=1,Valid=SA_No\)\]
$SEC105/378.SAPreDeref1ValidSAYes=\[SA_Pre\(Deref=1, Valid=SA_Yes\)\]
$SEC105/379.SAPreDeref1NullSANo=\[SA_Pre\( Deref=\(1\), Null=SA_No \)\]
$SEC105/380.SAPreDeref1ValidSAYesAccessSARead=\[SA_Pre\(Deref=1,Valid=SA_Yes,Access=SA_Read\)\]
$SEC105/381.SAPreDeref1ValidBytesConst1=\[SA_Pre\(Deref=1, ValidBytesConst=%1\)\]
$SEC105/382.SAPreDeref1ValidElementsConst1=\[SA_Pre\(Deref=1, ValidElementsConst=%1\)\]
$SEC105/383.SAPreDeref1ValidElementsConst1ElementSizeConst2=\[SA_Pre\(Deref=1,ValidElementsConst=%1,ElementSizeConst=%2\)\]
$SEC105/384.SAPreDeref1WritableBytes1=\[SA_Pre\(Deref=1, WritableBytes = "%1"\)\]
$SEC105/385.SAPreDeref2ValidSANo=\[SA_Pre\(Deref=2,Valid=SA_No\)\]
$SEC105/386.SAPreNullSAYes=\[SA_Pre\(Null=SA_Yes\)\]
$SEC105/387.SAPreNullSANo=\[SA_Pre\(Null=SA_No\)\]
$SEC105/388.SAPreNullSANoNullTerminatedSAYesWritableElements1=\[SA_Pre\(Null=SA_No,NullTerminated=SA_Yes,WritableElements="%1"\)\]
$SEC105/389.SAPreNullSAMaybe=\[SA_Pre\(Null=SA_Maybe\)\]
$SEC105/390.SAPreNullSANoNotref1=\[SA_Pre\(Null=SA_No,Notref=1\)\]
$SEC105/391.SAPreNullSAYesValidSANo=\[SA_Pre\(Null=SA_Yes, Valid=SA_No\)\]
$SEC105/392.SAPreNullSANoValidSANo=\[SA_Pre\(Null=SA_No, Valid=SA_No\)\]
$SEC105/393.SAPreNullSAMaybeValidSANo=\[SA_Pre\(Null=SA_Maybe, Valid=SA_No\)\]
$SEC105/394.SAPreNullSAYesValidSAYes=\[SA_Pre\(Null=SA_Yes, Valid=SA_Yes\)\]
$SEC105/395.SAPreNullSAYesWritableBytesParam1=\[SA_Pre\(Null=SA_Yes,WritableBytesParam="%1"\)\]
$SEC105/396.SAPreNullSAYesSAPreWritableElementsParam1=\[SA_Pre\(Null=SA_Yes\),SA_Pre\(WritableElementsParam="%1"\)\]
$SEC105/397.SAPreValidElementsParam1ElementSizeParam2=\[SA_Pre\(ValidElementsParam="%1", ElementSizeParam="%2"\)\]
$SEC105/398.SAPreNullSANoWritableElements1=\[SA_Pre\(Null=SA_No,WritableElements="%1"\)\]
$SEC105/399.SAPreNullSANoWritableElementsConst1=\[SA_Pre\(Null=SA_No,WritableElementsConst=%1\)\]
$SEC105/400.SAPreNullTerminatedSAYes=\[SA_Pre\(NullTerminated=SA_Yes\)\]
$SEC105/401.SAPreNullTerminatedSAYesNullSAMaybe=\[SA_Pre\(NullTerminated=SA_Yes,Null=SA_Maybe\)\]
$SEC105/402.SAPreNullTerminatedSAYesValidSAYes=\[SA_Pre\(NullTerminated=SA_Yes, Valid=SA_Yes\)\]
$SEC105/403.SAPreNullTerminatedSANoNullSANoValidElementsConst1WritableElementsConst2=\[SA_Pre\(NullTerminated=SA_No, Null=SA_No, ValidElementsConst=%1, WritableElementsConst=%2\)\]
$SEC105/404.SAPreNullTerminatedSANoValidSAYes=\[SA_Pre\(NullTerminated=SA_No, Valid=SA_Yes\)\]
$SEC105/405.SAPreElementSizeConst1ValidElementsConst2=\[SA_Pre\(ElementSizeConst=%1, ValidElementsConst=%2\)\]
$SEC105/406.SAPreElementSizeConst1WritableElementsConst2=\[SA_Pre\(ElementSizeConst=%1, WritableElementsConst=%2\)\]
$SEC105/407.SAFormatStringStyleprintf=\[SA_FormatString\(Style="printf"\)\]
$SEC105/408.SAFormatStringStylescanf=\[SA_FormatString\( Style="scanf" \)\]
$SEC105/409.SAPreValidSAYes=\[SA_Pre\( Valid=SA_Yes \)\]
$SEC105/410.SAPreValidSAYesNullSANo=\[SA_Pre\(Valid=SA_Yes, Null=SA_No\)\]
$SEC105/411.SAPreValidSAYesNullSANoValidElementsParam1=\[SA_Pre\(Valid=SA_Yes, Null=SA_No, ValidElementsParam=%1\)\]
$SEC105/412.SAPreValidSAYesNullSANoWritableElements1=\[SA_Pre\(Valid=SA_Yes, Null=SA_No, WritableElements="%1"\)\]
$SEC105/413.SAPreValidBytesConst1=\[SA_Pre\( ValidBytesConst=%1 \)\]
$SEC105/414.SAPreValidBytesConst1Condition2=\[SA_Pre\( ValidBytesConst=%1, Condition="%2" \)\]
$SEC105/415.SAPreValidBytes1=\[SA_Pre \(ValidBytes="%1"\)\]
$SEC105/416.SAPreValidElements1=\[SA_Pre \(ValidElements="%1"\)\]
$SEC105/417.SAPreValidElementsLength1=\[SA_Pre \(ValidElementsLength="%1"\)\]
$SEC105/418.SAPreValidElementsConst1=\[SA_Pre\( ValidElementsConst=%1 \)\]
$SEC105/419.SAPreValidElementsConst1WritableElementsConst2NullSANo=\[SA_Pre\(ValidElementsConst=%1, WritableElementsConst=%2, Null=SA_No\)\]
$SEC105/420.SAPreWritableElementsConst1=\[SA_Pre\(WritableElementsConst =%1\)\]
$SEC105/421.SAPreWritableElementsConst1Notref1=\[SA_Pre\(WritableElementsConst=%1,Notref=1\)\]
$SEC105/422.SAPreWritableElementsConst1NullSANo=\[SA_Pre\(WritableElementsConst=%1, Null=SA_No\)\]
$SEC105/423.SAPreWritableBytes1=\[SA_Pre \(WritableBytes="%1"\)\]
$SEC105/424.SAPreWritableBytesConst1=\[SA_Pre\(WritableBytesConst=%1\)\]
$SEC105/425.SAPreWritableElements1=\[SA_Pre\(WritableElements="%1"\)\]
$SEC105/426.SAPreWritableElementsL1=\[SA_Pre\(WritableElements=L"%1"\)\]
$SEC105/427.SAPreWritableBytesLength1=\[SA_Pre \(WritableBytesLength="%1"\)\]
$SEC105/428.SAPreWritableElementsLength1=\[SA_Pre \(WritableElementsLength="%1"\)\]
$SEC105/429.SAPreAttributeValidSAYes=\[SA_PreAttribute\(Valid=SA_Yes\)\]
$SEC105/430.SAPreValidBytesConst1SAPostValidBytesConst2=\[SA_Pre\( ValidBytesConst=%1 \), SA_Post\( ValidBytesConst=%2 \)\]
$SEC105/431.SAPreValidBytes1SAPostElementSize2WritableElementsConst3=\[SA_Pre\(ValidBytes="%1"\), SA_Post\(ElementSize="%2", WritableElementsConst=%3\)\]
$SEC105/432.SAPreElementSize1WritableElementsConst2SAPostValidBytes3=\[SA_Pre\(ElementSize="%1", WritableElementsConst=%2\), SA_Post\(ValidBytes="%3"\)\]
$SEC105/433.SAPreWritableElements1SAPostValidElements2=\[SA_Pre\(WritableElements="%1"\), SA_Post\(ValidElements="%2"\)\]
$SEC105/434.SAPreNullMaybeSAPostValidElementsParam1=\[SA_Pre\(Null=Maybe\), SA_Post\(ValidElementsParam="%1"\)\]
$SEC105/435.SAPreTainted1=\[SA_Pre \(Tainted=%1\)\]
$SEC105/436.PreTaintedSAYesSANo=\[Pre\(Tainted=\(SA_Yes \| SA_No\)\)\]
$SEC105/437.SAPreDeref0NullTerminatedSANo=\[SA_Pre\( Deref=\(0\), NullTerminated=SA_No \)\]
$SEC105/438.SAPreDeref0NullTerminatedSAMaybe=\[SA_Pre\( Deref=\(0\), NullTerminated=SA_Maybe \)\]
$SEC105/439.SAPreDeref1NullTerminatedSANo=\[SA_Pre\( Deref=\(1\), NullTerminated=SA_No \)\]
$SEC105/440.SAPreDeref1NullTerminatedSAMaybe=\[SA_Pre\( Deref=\(1\), NullTerminated=SA_Maybe \)\]
$SEC105/441.SAPreNullTerminatedSAMaybeValidSAYes=\[SA_Pre\(NullTerminated=SA_Maybe, Valid=SA_Yes\)\]
$SEC105/442.SAPreNullTerminatedSANoSAPostNullTerminatedSANo=\[SA_Pre\(NullTerminated=SA_No\), SA_Post\(NullTerminated=SA_No\)\]
$SEC105/443.SAPreNullTerminatedSANONullSANo=\[SA_Pre\(NullTerminated=SA_NO, Null=SA_No\)\]
$SEC105/444.SAPreNullTerminatedSANONullSANoValidSAYes=\[SA_Pre\(NullTerminated=SA_NO, Null=SA_No, Valid=SA_Yes\)\]
$SEC105/445.SAPreNullTerminatedCOMINGNullSANo=\[SA_Pre\(NullTerminated=COMING, Null=SA_No\)\]
$SEC105/446.SAPreNullTerminatedCOMINGNullSANoValidSAYes=\[SA_Pre\(NullTerminated=COMING, Null=SA_No, Valid=SA_Yes\)\]
$SEC105/447.SAPreElementSizeConst1=\[SA_Pre\(ElementSizeConst=%1\)\]
$SEC105/448.SAPostAccessSAWrite=\[SA_Post \(Access=SA_Write\)\]
$SEC105/449.SAPostDeref0NullTerminatedSAYes=\[SA_Post\( Deref=\(0\), NullTerminated=SA_Yes \)\]
$SEC105/450.SAPostDeref0ValidSAYesNullTerminatedSAYes=\[SA_Post\( Deref=\(0\), Valid=SA_Yes, NullTerminated=SA_Yes \)\]
$SEC105/451.SAPostDeref0ValidSAYesNullTerminatedSANo=\[SA_Post\( Deref=\(0\), Valid=SA_Yes, NullTerminated=SA_No \)\]
$SEC105/452.SAPostDeref0ValidBytesConst1=\[SA_Post\( Deref=\(0\), ValidBytesConst=\(%1\) \)\]
$SEC105/453.SAPostDeref0ValidElements1=\[SA_Post\( Deref=\(0\), ValidElements = "%1" \)\]
$SEC105/454.SAPostDeref0ValidElementsConst1=\[SA_Post\( Deref=\(0\), ValidElementsConst=\(%1\) \)\]
$SEC105/455.SAPostDeref0WritableElements1=\[SA_Post\( Deref=\(0\), WritableElements = "%1" \)\]
$SEC105/456.SAPostDeref0WritableElementsConst1=\[SA_Post\( Deref=\(0\), WritableElementsConst=\(%1\) \)\]
$SEC105/457.SAPostDeref0WritableElementsConst1ElementSizeConst2=\[SA_Post\( Deref=\(0\), WritableElementsConst=\(%1\), ElementSizeConst=%2 \)\]
$SEC105/458.SAPostDeref1NullSANo=\[SA_Post\( Deref=\(1\), Null=SA_No \)\]
$SEC105/459.SAPostDeref1NullSANo=\[SA_Post\(Deref=1, Null=SA_No\)\]
$SEC105/460.SAPostDeref1NullTerminatedSAYes=\[SA_Post\( Deref=1, NullTerminated=SA_Yes \)\]
$SEC105/461.SAPostDeref1NullTerminatedSAYes=\[SA_Post\( Deref=\(1\), NullTerminated=SA_Yes \)\]
$SEC105/462.SAPostDeref1ValidSAYes=\[SA_Post\( Deref=\(1\), Valid=SA_Yes \)\]
$SEC105/463.SAPostDeref1ValidBytes1=\[SA_Post\( Deref=\(1\), ValidBytes = "%1" \)\]
$SEC105/464.SAPostDeref1WritableElements1=\[SA_Post\( Deref=\(1\), WritableElements = "%1" \)\]
$SEC105/465.SAPostDeref1WritableElements1ElementSizeConst2=\[SA_Post\( Deref=\(1\), WritableElements = "%1", ElementSizeConst = %2 \)\]
$SEC105/466.SAPostDeref1WritableElementsConst1=\[SA_Post\( Deref=\(1\), WritableElementsConst=\(%1\) \)\]
$SEC105/467.SAPostDeref1ValidSANo=\[SA_Post\(Deref=1, Valid=SA_No\)\]
$SEC105/468.SAPostDeref2ValidSANo=\[SA_Post\(Deref=2,Valid=SA_No\)\]
$SEC105/469.SAPostDeref2ValidSAYes=\[SA_Post\(Deref=2,Valid=SA_Yes\)\]
$SEC105/470.SAPostNullSAYes=\[SA_Post\(Null=SA_Yes\)\]
$SEC105/471.SAPostNullSANo=\[SA_Post\(Null=SA_No\)\]
$SEC105/472.SAPostValidSAYes=\[SA_Post\(Valid=SA_Yes\)\]
$SEC105/473.SAPostValidBytes1=\[SA_Post\(ValidBytes="%1"\)\]
$SEC105/474.SAPostValidBytesParam1=\[SA_Post\(ValidBytesParam="%1"\)\]
$SEC105/475.SAPostValidBytesLength1=\[SA_Post\(ValidBytesLength="%1"\)\]
$SEC105/476.SAPostValidElementsConst1=\[SA_Post\(ValidElementsConst=%1\)\]
$SEC105/477.SAPostValidElements1=\[SA_Post\( ValidElements="%1" \)\]
$SEC105/478.SAPostValidElementsLength1=\[SA_Post\(ValidElementsLength="%1"\)\]
$SEC105/479.SAPostWritableElementsParam1=\[SA_Post\(WritableElementsParam="%1"\)\]
$SEC105/480.SAPostValidBytesConst1=\[SA_Post\( ValidBytesConst=\(%1\) \)\]
$SEC105/481.SAPostValidBytesConst1Condition2=\[SA_Post\( ValidBytesConst=%1, Condition="%2" \)\]
$SEC105/482.SAPostDeref1ValidBytesConst1=\[SA_Post\( Deref=1, ValidBytesConst=\(%1\) \)\]
$SEC105/483.SAPostDeref1ValidElementsConst1=\[SA_Post\( Deref=\(1\), ValidElementsConst = "%1" \)\]
$SEC105/484.SAPostAttributeValidSAYes=\[SA_PostAttribute\(Valid=SA_Yes\)\]
$SEC105/485.SAPost1=\[SA_Post=1\]
$SEC105/486.SAPostNullSANoMyAttribute1=\[SA_Post\(Null=SA_No\), MyAttribute=1\]
$SEC105/487.PostNullSANoDeref1=\[Post\(Null=SA_No, Deref=1\)\]
$SEC105/488.PostNullSANoDeref2=\[Post\(Null=SA_No, Deref=2\)\]
$SEC105/489.vcattributesPostValidSAYes=\[vc_attributes::Post\(Valid=SA_Yes\)\]
$SEC105/490.vcattributesPostAttributeValidSAYes=\[vc_attributes::PostAttribute\(Valid=SA_Yes\)\]
$SEC105/491.vcattributesSAPostValidSAYes=\[vc_attributes::SA_Post\(Valid=SA_Yes\)\]
$SEC105/492.vcattributesSAPostAttributeValidSAYes=\[vc_attributes::SA_PostAttribute\(Valid=SA_Yes\)\]
$SEC105/493.SAPostDeref0NullTerminatedSANo=\[SA_Post\( Deref=\(0\), NullTerminated=SA_No \)\]
$SEC105/494.SAPostDeref0NullTerminatedSAMaybe=\[SA_Post\( Deref=\(0\), NullTerminated=SA_Maybe \)\]
$SEC105/495.SAPostDeref1NullTerminatedSANo=\[SA_Post\( Deref=\(1\), NullTerminated=SA_No \)\]
$SEC105/496.SAPostDeref1NullTerminatedSAMaybe=\[SA_Post\(Deref=1, NullTerminated=SA_Maybe\) \]
$SEC105/497.SAPostDeref0NullTerminatedSANo=\[SA_Post\( Deref=0, NullTerminated=SA_No \)\]
$SEC105/498.SAPostNeedsReleaseSAYes=\[SA_Post\(NeedsRelease=SA_Yes\)\]
$SEC105/499.SAPostValidSAUnchanged=\[SA_Post\(Valid=SA_Unchanged\)\]
$SEC105/500.SAPostPROPERTYvalue1value2=\[SA_Post\( PROPERTY=\(value1 \| value2\) \)\]
$SEC105/501.SAPostElementSizeParam1=\[SA_Post\(ElementSizeParam="%1"\)\]
$SEC105/502.Pre=\[Pre\(\)\]
$SEC105/503.Pre1=\[Pre\(1\)\]
$SEC105/504.PreAccessSAYes=\[Pre\(Access=SA_Yes\)\]
$SEC105/505.PreAccessSANo=\[Pre\(Access=SA_No\)\]
$SEC105/506.PreAccessSAReadWrite=\[Pre\(Access=SA_ReadWrite\)\]
$SEC105/507.PreAccessSAReadSAWrite=\[Pre\(Access=\(SA_Read \| SA_Write\)\)\]
$SEC105/508.PreAccessSAReadSANoAccess=\[Pre\(Access=SA_Read \| SA_NoAccess\)\]
$SEC105/509.PreAccessSAReadWriteSANoAccess=\[Pre\(Access=SA_ReadWrite \| SA_NoAccess\)\]
$SEC105/510.PreDeref0=\[Pre\( Deref=0 \)\]
$SEC105/511.PreDeref0AccessWrite=\[Pre\( Deref=0, Access=Write \)\]
$SEC105/512.PreDeref1=\[Pre\(Deref=1\)\]
$SEC105/513.PreDeref1AccessRead=\[Pre\(Deref=1, Access=Read\)\]
$SEC105/514.PreDeref1AccessRead=\[Pre\( Deref=1, Access=Read \)\]
$SEC105/515.PreDeref1AccessWrite=\[Pre\(Deref=1, Access=Write\)\]
$SEC105/516.PreDeref1AccessReadWrite=\[Pre\(Deref=1, Access=ReadWrite \)\]
$SEC105/517.PreDeref2AccessWrite=\[Pre\( Deref=2, Access=Write \)\]
$SEC105/518.PreDeref3AccessWrite=\[Pre\( Deref=3, Access=Write \)\]
$SEC105/519.PreDeref1NullSAYes=\[Pre\(Deref=1, Null=SA_Yes\)\]
$SEC105/520.PreDeref0ValidSAYes=\[Pre\(Deref=0, Valid=SA_Yes\)\]
$SEC105/521.PreDeref1ValidYes=\[Pre\( Deref=1, Valid=Yes \)\]
$SEC105/522.PreDeref2ValidSAYes=\[Pre\(Deref=2, Valid=SA_Yes\)\]
$SEC105/523.PreDeref3ValidSAYes=\[Pre\(Deref=3, Valid=SA_Yes\)\]
$SEC105/524.PreDeref4ValidSAYes=\[Pre\(Deref=4, Valid=SA_Yes\)\]
$SEC105/525.PreNullYesValidYes=\[Pre\(Null=Yes, Valid=Yes\)\]
$SEC105/526.PreNullYesValidNo=\[Pre\(Null=Yes, Valid=No\)\]
$SEC105/527.PreNullNo=\[Pre\(Null=No\)\]
$SEC105/528.PreNullNoValidNo=\[Pre\(Null=No, Valid=No\)\]
$SEC105/529.PreNullMaybeValidNo=\[Pre\(Null=Maybe, Valid=No\)\]
$SEC105/530.PreNullSAYesSAMaybe=\[Pre\(Null=\(SA_Yes \| SA_Maybe\)\)\]
$SEC105/531.PreNullYesNullNo=\[Pre\(Null=Yes, Null=No\)\]
$SEC105/532.PreNullTerminatedSARead=\[Pre\(NullTerminated=SA_Read\)\]
$SEC105/533.PreValidSANo=\[Pre\(Valid=SA_No\)\]
$SEC105/534.PreValidSAMaybe=\[Pre\(Valid=SA_Maybe\)\]
$SEC105/535.PreValidSAYesSAMaybe=\[Pre\(Valid=\(SA_Yes \| SA_Maybe\)\)\]
$SEC105/536.PreValidYes=\[Pre\(Valid=Yes\)\]
$SEC105/537.PreValidYesNullTerminatedYes=\[Pre\( Valid=Yes, NullTerminated=Yes \)\]
$SEC105/538.PreValidYesNullTerminatedNo=\[Pre\( Valid=Yes, NullTerminated=No \)\]
$SEC105/539.vcattributesPreValidSAYes=\[vc_attributes::Pre\(Valid=SA_Yes\)\]
$SEC105/540.vcattributesPreAttributeValidSAYes=\[vc_attributes::PreAttribute\(Valid=SA_Yes\)\]
$SEC105/541.vcattributesSAPreValidSAYes=\[vc_attributes::SA_Pre\(Valid=SA_Yes\)\]
$SEC105/542.vcattributesSAPreAttributeValidSAYes=\[vc_attributes::SA_PreAttribute\(Valid=SA_Yes\)\]
$SEC105/543.PreDeref1NullTerminatedSAMaybe=\[Pre\(Deref=1, NullTerminated=SA_Maybe\)\]
$SEC105/544.PreNullTerminatedSAYesSAMaybe=\[Pre\(NullTerminated=\(SA_Yes \| SA_Maybe\)\)\]
$SEC105/545.PreDeref1AccessWrite=\[Pre\( Deref=-1, Access=Write \)\]
$SEC105/546.PreDerefINTMINAccessWrite=\[Pre\( Deref=INT_MIN, Access=Write \)\]
$SEC105/547.PreDeref1ValidSAYes=\[Pre\(Deref=-1, Valid=SA_Yes\)\]
$SEC105/548.PreDerefderefAccess1=\[Pre\( Deref=deref, Access=%1 \)\]
$SEC105/549.PreDerefderefNull1=\[Pre\( Deref=deref, Null=%1 \)\]
$SEC105/550.PreDerefderefValidvalidValuePreDerefderefderefNNullnullValue=\[Pre\( Deref=deref, Valid=validValue \), Pre\( Deref=deref+derefN, Null=nullValue \)\]
$SEC105/551.PreNeedsRelease1=\[Pre\( NeedsRelease=%1 \)\]
$SEC105/552.PreValidSANoAccess=\[Pre\(Valid=SA_NoAccess\)\]
$SEC105/553.Post=\[Post\(\)\]
$SEC105/554.Post12=\[Post\(1,2\)\]
$SEC105/555.Post1NullYes=\[Post\(1, Null=Yes\)\]
$SEC105/556.PostAccessRead=\[Post\( Access=Read \)\]
$SEC105/557.PostAccessSAWriteSANoAccess=\[Post\(Access=SA_Write \| SA_NoAccess\)\]
$SEC105/558.PostDeref1=\[Post\( Deref=1 \)\]
$SEC105/559.PostDeref2=\[Post\( Deref=2 \)\]
$SEC105/560.PostDeref0AccessWrite=\[Post\( Deref=0, Access=Write \)\]
$SEC105/561.PostDeref1AccessWrite=\[Post\( Deref=1, Access=Write \)\]
$SEC105/562.PostDeref2AccessRead=\[Post\( Deref=2, Access=Read \)\]
$SEC105/563.PostDeref2AccessWrite=\[Post\( Deref=2, Access=Write \)\]
$SEC105/564.PostDeref3AccessWrite=\[Post\( Deref=3, Access=Write \)\]
$SEC105/565.PostDeref1ValidYes=\[Post\( Deref=1, Valid=Yes \)\]
$SEC105/566.PostNullYes=\[Post\(Null=Yes\)\]
$SEC105/567.PostNullYesNullNo=\[Post\(Null=Yes, Null=No\)\]
$SEC105/568.PostNullSAMaybe=\[Post\(Null=SA_Maybe\)\]
$SEC105/569.PostNullSAMaybeDeref1=\[Post\(Null=SA_Maybe, Deref=1\)\]
$SEC105/570.PostValidNo=\[Post\( Valid=No \)\]
$SEC105/571.PostValidSANo=\[Post\(Valid=SA_No\)\]
$SEC105/572.PostWritableBytes1=\[Post\(WritableBytes="%1"\)\]
$SEC105/573.PostWritableBytesConst1=\[Post\(WritableBytesConst=%1\)\]
$SEC105/574.PostWritableBytesConst1Deref1=\[Post\(WritableBytesConst=%1, Deref=1\)\]
$SEC105/575.PostDeref1WritableBytesConst1=\[Post\(Deref=1, WritableBytesConst=%1\)\]
$SEC105/576.PostWritableBytes1Deref1=\[Post\(WritableBytes="%1", Deref=1\)\]
$SEC105/577.PostValidBytesConst1Deref2=\[Post\(ValidBytesConst=%1, Deref=2\)\]
$SEC105/578.PostWritableElementsConst1=\[Post\(WritableElementsConst=%1\)\]
$SEC105/579.PostWritableElementsConst1Deref1=\[Post\(WritableElementsConst=%1, Deref=1\)\]
$SEC105/580.PostDeref1WritableElementsConst1=\[Post\(Deref=1, WritableElementsConst=%1\)\]
$SEC105/581.PostWritableElements1Deref1=\[Post\(WritableElements="%1", Deref=1\)\]
$SEC105/582.PostWritableElements1=\[Post\(WritableElements="%1"\)\]
$SEC105/583.PostDeref1ValidElementsConst1=\[Post\(Deref=1, ValidElementsConst=%1\)\]
$SEC105/584.PostDeref1Tainted1=\[Post\(Deref=1, Tainted=%1\)\]
$SEC105/585.PostValidSAMaybeDeref1=\[Post\(Valid=SA_Maybe, Deref=1\)\]
$SEC105/586.PostAccess1=\[Post\( Access=%1 \)\]
$SEC105/587.PostDeref1Access1=\[Post\( Deref=1, Access=%1 \)\]
$SEC105/588.PostDeref1NeedsRelease1=\[Post\( Deref=1, NeedsRelease=%1 \)\]
$SEC105/589.PostDeref1PROPERTY2=\[Post\(Deref=%1, PROPERTY=%2\)\]
$SEC105/590.PostDeref1PROPERTY2=\[Post\(Deref=%1, PROPERTY="%2"\)\]
$SEC105/591.PostDeref1Access2=\[Post\( Deref=%1, Access=%2 \)\]
$SEC105/592.PostDeref1Null2=\[Post\( Deref=%1, Null=%2 \)\]
$SEC105/593.PostDeref1property12=\[Post\(Deref=%1, property1=%2\)\]
$SEC105/594.PostDeref1property22=\[Post\(Deref=%1, property2=%2\)\]
$SEC105/595.PostDeref1Valid2=\[Post\( Deref=%1, Valid=%2 \)\]
$SEC105/596.PostNeedsRelease1=\[Post\( NeedsRelease=%1 \)\]
$SEC105/597.PostPROPERTY1=\[Post\(PROPERTY=%1\)\]
$SEC105/598.PostPROPERTY1=\[Post\(PROPERTY="%1"\)\]
$SEC105/599.PostPROPERTY1Deref2=\[Post\(PROPERTY="%1", Deref=%2\)\]
$SEC105/600.PostPROPERTY1Deref2=\[Post\(PROPERTY=%1, Deref=%2\)\]
$SEC105/601.returnvaluePostAccessSARead=\[returnvalue:Post\(Access=SA_Read\)\]
$SEC105/602.returnvaluePostAccessSAReadSARead=\[returnvalue:Post\(Access=\(SA_Read \| SA_Read\)\)\]
$SEC105/603.returnvaluePostNullSAYes=\[returnvalue:Post\(Null=SA_Yes\)\]
$SEC105/604.returnvaluePostNullSANoDeref0=\[returnvalue:Post\(Null=SA_No, Deref=0\)\]
$SEC105/605.returnvaluePostNullSANoDeref1=\[returnvalue:Post\(Null=SA_No, Deref=1\)\]
$SEC105/606.returnvaluePostNullSAMaybeDeref2=\[returnvalue:Post\(Null=SA_Maybe, Deref=2\)\]
$SEC105/607.returnvaluePostValidSAYes=\[returnvalue:Post\(Valid=SA_Yes\)\]
$SEC105/608.returnvaluePostWritableBytesConst1=\[returnvalue:Post\(WritableBytesConst=%1\)\]
$SEC105/609.returnvaluePostValidBytesConst1=\[returnvalue:Post\(ValidBytesConst=%1\)\]
$SEC105/610.returnvaluePostValidElementsConst1=\[returnvalue:Post\(ValidElementsConst=%1\)\]
$SEC105/611.returnvaluePostWritableElementsConst1=\[returnvalue:Post\(WritableElementsConst=%1\)\]
$SEC105/612.returnvaluePostNullTerminatedSANo=\[returnvalue:Post\(NullTerminated=SA_No\)\]
$SEC105/613.returnvaluePostDeref0returnvaluePostValidSAYes=\[returnvalue:Post\(Deref=0\), returnvalue:Post\(Valid=SA_Yes\)\]
$SEC105/614.returnvalueSAPostNullSAMaybe=\[returnvalue: SA_Post\(Null=SA_Maybe\)\]
$SEC105/615.returnvalueSAPostDeref0NullSAYes=\[returnvalue: SA_Post\( Deref=\(0\), Null=SA_Yes \)\]
$SEC105/616.returnvalueSAPostNullSAMaybeValidElements1=\[returnvalue: SA_Post\(Null=SA_Maybe, ValidElements=%1\)\]
$SEC105/617.returnvalueSAPostDeref1NullSAMaybe=\[returnvalue: SA_Post\( Deref=\(1\), Null=SA_Maybe \)\]
$SEC105/618.returnvalueSAPostDeref0NullSANo=\[returnvalue: SA_Post\( Deref=\(0\), Null=SA_No \)\]
$SEC105/619.returnvalueSAPostMustCheckSAYes=\[returnvalue: SA_Post\(MustCheck=SA_Yes\)\]
$SEC105/620.returnvaluePostAccessSAReadWrite=\[returnvalue:Post\(Access=SA_ReadWrite\)\]
$SEC105/621.returnvaluePostAccessSAReadWriteDeref1=\[returnvalue:Post\(Access=SA_ReadWrite, Deref=1\)\]
$SEC105/622.returnvaluePostAccessSAWrite=\[returnvalue:Post\(Access=SA_Write\)\]
$SEC105/623.returnvaluePostAccessSAReadWriteSARead=\[returnvalue:Post\(Access=\(SA_ReadWrite \| SA_Read\)\)\]
$SEC105/624.returnvaluePostValidSAMaybeDeref1=\[returnvalue:Post\(Valid=SA_Maybe, Deref=1\)\]
$SEC105/625.returnvalueSAPostDeref1NullSAYesNullTerminatedSANo=\[returnvalue: SA_Post\( Deref=\(1\), Null=SA_Yes, NullTerminated=SA_No \)\]
$SEC105/626.returnvaluePostAccessSAMaybe=\[returnvalue:Post\(Access=SA_Maybe\)\]
$SEC105/627.returnvaluePostAccessSANoAccess=\[returnvalue:Post\(Access=SA_NoAccess\)\]
$SEC105/628.returnvaluePostAccessSANoAccessSANoAccess=\[returnvalue:Post\(Access=\(SA_NoAccess \| SA_NoAccess\)\)\]
$SEC105/629.returnvaluePostDeref1ValidSAYes=\[returnvalue:Post\(Deref='%1', Valid=SA_Yes\)\]
