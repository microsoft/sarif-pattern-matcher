{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "testhost",
          "organization": "Microsoft Corporation",
          "product": "Microsoft.TestHost",
          "fullName": "testhost 15.0.0.0",
          "version": "15.0.0.0",
          "semanticVersion": "15.0.0",
          "rules": [
            {
              "id": "SEC101/001",
              "name": "DoNotExposePlaintextSecrets/HttpAuthorizationRequestHeader",
              "fullDescription": {
                "text": "Do not expose plaintext (or base64-encoded plaintext) secrets in versioned engineering content."
              },
              "messageStrings": {
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' because the analysis is not relevant for the following reason: {2}."
                },
                "Default": {
                  "text": "'{0}' contains {1}{2}{3}{4}{5}."
                }
              },
              "helpUri": "https://github.com/microsoft/sarif-pattern-matcher"
            }
          ]
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "results": [
        {
          "ruleId": "SEC101/001",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "id": "Default",
            "arguments": [
              "SEC101_001.HttpAuthorizationRequestHeader.ps1",
              "an apparent ",
              "",
              "Http authorization request header",
              "",
              " (no validation occurred as it was not enabled. Pass '--dynamic-validation' on the command-line to validate this match)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/Plugins/Tests.Security/TestData/SecurePlaintextSecrets/Inputs/SEC101_001.HttpAuthorizationRequestHeader.ps1",
                  "uriBaseId": "SRC_ROOT"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 30,
                  "endLine": 4,
                  "endColumn": 70,
                  "charOffset": 51,
                  "charLength": 137,
                  "snippet": {
                    "text": "https://example.com\");\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"Authorization\", \"Basic SomeAuthorizationKey1111111"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "AssetFingerprint/v1": "[host=example.com][scheme=https]",
            "ValidationFingerprint/v1": "[host=example.com][scheme=https][secret=SomeAuthorizationKey1111111]",
            "ValidationFingerprintHash/v1": "1b9f90ed013da8e7ff2e6aac2004a8d247657c3cf9a40b6737d6377357996d00"
          },
          "rank": 51.84
        },
        {
          "ruleId": "SEC101/001",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "id": "Default",
            "arguments": [
              "SEC101_001.HttpAuthorizationRequestHeader.ps1",
              "an apparent ",
              "",
              "Http authorization request header",
              "",
              " (no validation occurred as it was not enabled. Pass '--dynamic-validation' on the command-line to validate this match)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/Plugins/Tests.Security/TestData/SecurePlaintextSecrets/Inputs/SEC101_001.HttpAuthorizationRequestHeader.ps1",
                  "uriBaseId": "SRC_ROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 8,
                  "endColumn": 70,
                  "charOffset": 224,
                  "charLength": 181,
                  "snippet": {
                    "text": "https://example.com?some=parameters&that=should&appear=inresults\")\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"Authorization\", \"Basic SomeAuthorizationKey2222222"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "AssetFingerprint/v1": "[host=example.com][path=?some=parameters&that=should&appear=inresults][scheme=https]",
            "ValidationFingerprint/v1": "[host=example.com][path=?some=parameters&that=should&appear=inresults][scheme=https][secret=SomeAuthorizationKey2222222]",
            "ValidationFingerprintHash/v1": "7cf9f342633b654a61e77fa95d69886c9e1df6e27d64ed297968a51eee5c5dd3"
          },
          "rank": 51.84
        },
        {
          "ruleId": "SEC101/001",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "id": "Default",
            "arguments": [
              "SEC101_001.HttpAuthorizationRequestHeader.ps1",
              "an apparent ",
              "",
              "Http authorization request header",
              "",
              " (no validation occurred as it was not enabled. Pass '--dynamic-validation' on the command-line to validate this match)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/Plugins/Tests.Security/TestData/SecurePlaintextSecrets/Inputs/SEC101_001.HttpAuthorizationRequestHeader.ps1",
                  "uriBaseId": "SRC_ROOT"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 32,
                  "endLine": 12,
                  "endColumn": 60,
                  "charOffset": 451,
                  "charLength": 83,
                  "snippet": {
                    "text": "https://example.com' \\\r\n--header 'Authorization: Basic SomeAuthorizationKey3333333="
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "AssetFingerprint/v1": "[host=example.com][scheme=https]",
            "ValidationFingerprint/v1": "[host=example.com][scheme=https][secret=SomeAuthorizationKey3333333=]",
            "ValidationFingerprintHash/v1": "4311d68f53bf9650c5adbc48d726933d152236e1912d17a7c6f65841920a9707"
          },
          "rank": 53.16
        },
        {
          "ruleId": "SEC101/001",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "id": "Default",
            "arguments": [
              "SEC101_001.HttpAuthorizationRequestHeader.ps1",
              "an apparent ",
              "",
              "Http authorization request header",
              "",
              " (no validation occurred as it was not enabled. Pass '--dynamic-validation' on the command-line to validate this match)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/Plugins/Tests.Security/TestData/SecurePlaintextSecrets/Inputs/SEC101_001.HttpAuthorizationRequestHeader.ps1",
                  "uriBaseId": "SRC_ROOT"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 30,
                  "endLine": 18,
                  "endColumn": 70,
                  "charOffset": 679,
                  "charLength": 137,
                  "snippet": {
                    "text": "https://example.com/\")\r\nvar request = new RestRequest(Method.GET);\r\nrequest.AddHeader(\"Authorization\", \"Basic SomeAuthorizationKey4444444"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "AssetFingerprint/v1": "[host=example.com][scheme=https]",
            "ValidationFingerprint/v1": "[host=example.com][scheme=https][secret=SomeAuthorizationKey4444444]",
            "ValidationFingerprintHash/v1": "d60add151828b6af4b3b97c4f2fd12ecba4405113b658052325c527d3ac05c35"
          },
          "rank": 51.84
        },
        {
          "ruleId": "SEC101/001",
          "ruleIndex": 0,
          "level": "note",
          "message": {
            "id": "Default",
            "arguments": [
              "SEC101_001.HttpAuthorizationRequestHeader.ps1",
              "an apparent ",
              "",
              "Http authorization request header",
              "",
              " (no validation occurred as it was not enabled. Pass '--dynamic-validation' on the command-line to validate this match)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/Plugins/Tests.Security/TestData/SecurePlaintextSecrets/Inputs/SEC101_001.HttpAuthorizationRequestHeader.ps1",
                  "uriBaseId": "SRC_ROOT"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 31,
                  "endColumn": 259,
                  "charOffset": 1158,
                  "charLength": 329,
                  "snippet": {
                    "text": "http://we.want.that.site.com/16 HTTP/1.1\r\nHost: we.want.that.site.com\r\nProxy-Authorization: Basic 6666666b29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29uZw=="
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "AssetFingerprint/v1": "[host=we.want.that.site.com][path=/16][scheme=http]",
            "ValidationFingerprint/v1": "[host=we.want.that.site.com][path=/16][scheme=http][secret=6666666b29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29uZw==]",
            "ValidationFingerprintHash/v1": "2e15426e76483150597c0611c0ad9a2b180046aeb5e1611a455f23d2e55eb4b3"
          },
          "rank": 32.62
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}