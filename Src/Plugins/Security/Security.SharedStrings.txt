#
# This file contains key values pairs which are used to expand variable references in
# the JSON-based regex pattern definition files. This is useful both to share common
# regex patterns across multiple rules but also to avoid the complexities of escaping
# JSON string literals. The strings below are directly testable in web sites such as 
# reg101.com.
#
# Shared strings can be assembled even within this file as long as any shared pattern
# in a strings only contains variables which are defined earlier in the file. So, 
# a pattern like this is ok (but these lines in reverse order are not).
#
# $MyExample=[a-z]
# $MyExpandedExample=($MyExample|[0-9])
#
# Blank lines are ignored when parsing, as are lines that begin with a '#' character.
# Leading spaces are trimmed at parse time, allowing for indentation.

# Common patterns for file allow and deny lists.
#
  $CSourceFiles=(?i)\.(c|cpp|cxx)$
  $BinaryFiles=(?i)\.(bmp|dll|exe|gif|jpe?g|lock|pack|png|psd|tar\.gz|tiff?|ttf|wmf|xcf|zip)$
  $SourceFiles=(?i)\.(azure|bat|c|cmd|config|cpp|cs|cscfg|definitions|dtsx|h|hxx|hpp|ini|java|jsx?|json|keys|kt|loadtest|m|md|php|properties|ps1|psm1|pubxml|py|resx|sample|sql|ste|swift|test|tsx?|txt|waz|xml)$

# $FacebookAppCredentials=(?si)(((facebook|fb)(.{0,20})?[`'"\s>](?<id>[0-9]{13,17})[^0-9].{1,500}?)|((facebook|fb)(.{0,20})?[`'"\s>](?<secret>[0-9a-f]{32})([^0-9a-f]?)).{1,500}?){2}

  $SEC101/001.HttpAuthorizationRequestHeader=(?i)(?<scheme>http|ftp|https):\/\/(?<host>[\w_.-]{1,200})(?<path>[\w.,@?^=%&:\/~+#-]*[\w@?^=%&\/~+#-])?(.|\n){0,100}?authorization[,\[:= "']+(basic)[\s\r\n]{0,10}(?<secret>[^'"><;\s]{1,500})
  $SEC101/002.GoogleOAuthCredentials=(?s)\b(?<id>[0-9]{12}\-[0-9a-z]{32})\.apps\.googleusercontent\.com.{1,500}?\b(?i)(?<secret>[0-9a-z\-]{24})
  $SEC101/003.GoogleApiKey=\b(?<refine>AIza(?i)[0-9a-z-_]{35})([^0-9a-z-_]|$)
  $SEC101/004.FacebookAppCredentials=(?si)facebook.{1,50}\b(?<id>[0-9]{15}).{1,500}?\b(?<secret>[0-9a-f]{32})
  $SEC101/005.SlackToken=\b(?<refine>xox(?<type>p|b|a|o|r|s)-(?i)[0-9a-z\-]+)
  $SEC101/006.GitHubPatLegacy=(?si)(?<refine>github.{0,50}[^0-9a-z](?<secret>[0-9a-z]{40}))([^0-9a-z]|$)
  $SEC101/006.GitHubPatCurrent=gh(p|o|u|s|r)_(?<secret>[\w]{30})(?<checksum>[\w]{6})
  $SEC101/007.GitHubAppCredentials=(?s)((\b(?<id>Iv1\.[0-9a-z]{16}).{1,50}?)|(\b(?i)(?<secret>[0-9a-z]{35,40})\b.{0,50}?)){2}
  $SEC101/008.AwsCredentials=(?s)\b(?<id>(A3T[0-9A-Z]|AKIA|AGPA|AROA|AIPA|ANPA|ANVA|ASIA)[0-9A-Z]{16}).{1,500}?\b(?i)(?<secret>[0-9a-z\/+]{40})
  $SEC101/009.LinkedInCredentials=(?si)linkedin(.{0,50})?\b(?-i)(?<id>[0-9a-z]{14})\b.{0,50}?\b(?i)(?<secret>[0-9a-z]{16})\b
  $SEC101/010.SquarePat=(?si)(?<refine>square.{0,50}[^0-9a-z](?<secret>(?-i)EAAAE[\w\-]{59}))([^0-9a-z]|$)
  $SEC101/011.SquareCredentials=(?s)((\b(?<id>sq0idp\-[\w\-]{22}).{1,50}?)|(\b(?<secret>sq0csp-(?i)[0-9a-z\-_]{43}).{0,50}?)){2}
  $SEC101/012.SlackWebhook=(?i)https:\/\/hooks\.slack\.com\/services\/(?<id>T[0-9a-z_]{8,10})\/(?<secret>B[0-9a-z_]{8,10}\/[0-9a-z_]{24})
  $SEC101/013/PrivateKeyBlob.CryptographicPrivateKey=(?i)(^|[^0-9a-z+\/=])(?<secret>[0-9a-z+\/=]{412})([^0-9a-z+\/=]|$)
  $SEC101/013/RsaKeyPair.CryptographicPrivateKey=(?is)<RSAKeyPair>.+?<D>(?<secret>.+?)<\/D>.+?<\/RSAKeyPair>
  $SEC101/013/PemCer.CryptographicPrivateKey=(?si)-{5}BEGIN CERTIFICATE-{5}\n?(?<secret>[^:]*?)-{5}END CERTIFICATE-{5}
  $SEC101/013/Putty.CryptographicPrivateKey=(?is)PuTTY-User-Key-File-2.+?Private-Lines:\s*[0-9]+\s*(?<secret>.+?)Private-MAC:\s[0-9a-z]+([^0-9a-d]|$)
  $SEC101/013/Pem.CryptographicPrivateKey=(?si)-{5}BEGIN (DSA|EC|OPENSSH|PGP|RSA|SSH2 ENCRYPTED)?\s*PRIVATE (KEY BLOCK|KEY)-{5}.*?(VERSION: [^\n]+\n)*\n(?<secret>[^:]*?)-{5}END (DSA|EC|OPENSSH|PGP|RSA|SSH2 ENCRYPTED)?\s*PRIVATE (KEY BLOCK|KEY)-{5}
  $SEC101/014.FacebookAccessToken=\b(?<refine>EAACEdEose0cBA(?i)[0-9a-z]+)
  $SEC101/015.AkamaiCredentials=(?si)https:\/\/(?<resource>[\w\-\.]+)\.akamaiapis\.net.{0,150}((client_token.{0,10}\b(?<id>akab[\w\-]+).{0,50})|(access_token.{0,10}\b(?<id>akab[\w\-]+).{0,200})|((client_secret).{0,10}\b(?<secret>[a-z0-9\/\\+]{43}=))){3}
  $SEC101/016.StripeApiKey=\b(?<refine>(?<secret>(?:r|s)k_(live|test)_(?i)[0-9a-z]{24,99}))([^0-9a-z]|$)
  $SEC101/017.NpmAuthorToken=(?i)npm.{0,100}[^0-9a-z](?-i)(?<refine>(?<secret>[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}))[^0-9A-Za-z]
  $SEC101/018.TwilioCredentials=(?si)twilio.{1,50}\b(?<id>AC[0-9a-z]{32}).{1,500}?\b(?<secret>[0-9a-f]{32})
  $SEC101/019.PicaticApiKey=\b(?<refine>sk_(live|test)_[0-9a-z]{32})(?i)([^0-9a-z]|$)
  $SEC101/020.DropboxAccessTokenNoExpiration=(?si)dropbox.{1,50}[^0-9a-z](?<refine>[0-9a-z_-]{64})([^0-9a-z]|$)
  $SEC101/020.DropboxAccessTokenShortExpiration=(?si)dropbox.{1,50}\b(?<refine>sl\.(?i)[0-9a-z-_]{135,139})(?i)([^0-9a-z]|$)
  $SEC101/021.DropboxAppCredentials=(?si)dropbox.{0,50}key.{0,10}[^0-9a-z](?<id>(?-i)[0-9a-z]{15})([^0-9a-z]|$).{0,50}secret.{0,10}[^0-9a-z](?<secret>(?-i)[0-9a-z]{15})([^0-9a-z]|$)
  $SEC101/022.PayPalBraintreeAccessToken=access_token\$production\$(?<refine>(?<secret>[0-9a-z]{16}\$[0-9a-f]{32}))
  $SEC101/023.AmazonMwsAuthToken=\b(?<refine>amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})([^0-9a-f]|$)
  $SEC101/024.TwilioApiKey=\b(?<refine>(?<secret>SK(?i)[0-9a-f]{32}))([^0-9a-f]|$)
  $SEC101/025.SendGridApiKey=\b(?<refine>(?<secret>SG\.(?i)[0-9a-z\-_]{22}\.(?i)[0-9a-z\-_]{43}))([^0-9a-f]|$)
  $SEC101/026.MailgunApiCredentials=(?is)((^|[^0-9a-z\-])(?<secret>[0-9a-z]{32}-[0-9a-z]{8}-[0-9a-z]{8}).{0,50}?|[^0-9a-z](?<id>[0-9a-z]+?\.mailgun\.org).{0,50}?){2}
  $SEC101/027.MailChimpApiKey=\b(?<refine>(?<secret>[0-9a-f]{32}-us[0-9]{12}))
  $SEC101/028.PlaintextPassword=(?i)ConvertTo-SecureString\s*(-[S]tring)?\s*["'](?<secret>[^"')(]*)["']
  $SEC101/029.AlibabaCloudCredentials=\b(?<id>LTAI([a-zA-Z0-9]{12}|[a-zA-Z0-9]{20}))\b(?s).{0,50}(?-s)\b(?<secret>[\w]{30})\b
  $SEC101/030.GoogleServiceAccountKeyConsoleFormat="private_key":\s*"-----BEGIN PRIVATE KEY-----\\n(?s)(?<secret>[^"]+)(?-s)\\n-----END PRIVATE KEY-----\\n(?s).{1,200}(?-s)"client_id"\s*:\s*"(?<id>[\w.-]+)"
  $SEC101/030.GoogleServiceAccountKeyConsoleRestFormat="name": "projects\/[\w-]+\/serviceAccounts\/[\w@.-]+\/keys\/(?<secret>[^"]+)",
  $SEC101/031.NuGetApiKey=\b(?<refine>(?<secret>oy2[0-9a-z]{43}))(^[0-9a-z]|$)
  $SEC101/032.GpgCredentials=(?is)gpg[._-](gen_key_input|sign|decrypt_file)\s*\(\s*(name_email\s*=\s*["'](?<id>[^"']*)["'])?.{0,50}passphrase\s*=\s*["'](?<secret>[^"']*)["']
  $SEC101/033.MongoDbConnectionString=(?i)mongodb([^:]{0,50})?:\/\/(?<id>[0-9a-z]+):(?<secret>[^@\s]{1,200})@(?<host>[^\/;"<]+)
  $SEC101/034.CredentialObjectConstructor=(PSCredential|SqlCredential)\s*\(\s*"(?<id>[^"]*)"\s*,\s*"(?<secret>[^"]*)"
  $SEC101/034.CredentialObjectInitializer=(?s)(PSCredential|SqlCredential)\s*\(\)\s*{\s*.{0,50}User(Name|Id)\s*=\s*"(?<id>[^"]*)"\s*,.{0,50}Password\s*=\s*"(?<secret>[^"]*)"  
  $SEC101/035.CloudantCredentialsPython=(?is)cloudant\s*\(\s*"(?<id>[\w-]+)"\s*\,\s*"(?<secret>[\w]{64})"\s*\,\s*.{0,200}url=\s*"https:\/\/(?<resource>[\w.-]+)\.(?<host>cloudantnosqldb\.appdomain\.cloud|cloudant\.com)
  $SEC101/035.CloudantCredentialsJson=(?is)apiKey"[^"]+"(?<secret>[\w-]+)".{1,100}[^0-9a-z\.-](?<id>[0-9a-z\.-]{32,44})\.(?<host>cloudantnosqldb\.appdomain\.cloud|cloudant\.com)
  $SEC101/035.CloudantCredentialsUrl=(?i)https:\/\/(?<id>[^:]+):(?<secret>[\w]{64}|[a-z]{24})@[\w-]+\.(?<host>cloudantnosqldb\.appdomain\.cloud|cloudant\.com)
  $SEC101/036.MySqlConnectionStringAdo=(?i)(Port\s*=\s*([0-9]{4,5}).*)?(((Server\s*=\s*(?<host>[\w\-.]{3,90}))|(Uid=(?-i)(?<id>[a-z\@\-]{1,120})(?i))|(Pwd\s*=\s*(?<secret>[^;"]{8,128}))).*?){3}(.*Port\s*=\s*([0-9]{4,5}))?
  $SEC101/036.MySqlConnectionStringPlainJdbc=(jdbc:mysql:\/\/(?<host>[\w.:-]{1,131})?(?s).{1,200}(?-s))?DriverManager\.getConnection\(\s*(?<url>[^,(]+),\s*"(?<id>[\w@-]{1,200})",\s*"(?<secret>[^"';<>=]{7,200})"
  $SEC101/037.SqlConnectionStringAdo=(?i)(((server|data source)\s*=\s*[^;"<\n]{0,50}|(initial catalog|database)\s*=\s*[^;"<>*%&:\/?\n]{0,50}|(user id|uid)\s*=\s*[^;"'<]{0,50}|(password|pwd)\s*=\s*[^;"<]{0,50}).+?){4}
  $SEC101/037.SqlConnectionStringJdbc=(?i)jdbc:sqlserver:\/\/(?<host>[^;"<]+);(((database\s*=\s*(?<database>[^;"<>*%&:\/?\n]{1,128}))|(user\s*=\s*(?<id>[^@]+)@[^;"<]+)|(password\s*=\s*(?<secret>[^;"<]+))).{1,50}?){3}
  $SEC101/037.SqlConnectionStringPhp=(?i)sqlsrv:server\s*=\s*(?<host>[^;"<]+);\s*Database\s*=\s*(?<database>[^;"<>*%&:\/?\n]+)",\s*"(?<id>[^"]+)",\s*"(?<secret>[^"]+)"
  $SEC101/038.PostgreSqlConnectionStringAdo=((?i)(((Port\s*=\s*[0-9]{1,5})|((database|db)\s*=\s*[^;"<]+));.*)?((host|server)\s*=\s*(?<host>[\w\-_\.]{3,91})|(username|uid|user id)\s*=\s*(?<id>[^,;"<\s]+)|(password|pwd)\s*=\s*(?<secret>[^,;"<\s]+)).+?){3}(.*((Port\s*=\s*[0-9]{1,5})|((database|db)\s*=\s*[^;"<]+)))?
  $SEC101/039.ShopifyAccessToken=\b(?<refine>(shpat|shpca|shppa)_(?i)[0-9a-f]{32})
  $SEC101/040.ShopifySharedSecret=\b(?<refine>shpss_(?i)[0-9a-f]{32})
  $SEC101/041.RabbitMqConnectionString=(?i)(?<refine>amqps?:\/\/(?<id>[^:]+):(?<secret>[^@]+)@(?<host>[\w_\-\:]+)\/(?<resource>[\w]+))([^0-9a-z]|$)
  $SEC101/042.DynatraceToken=\b(?<refine>dt0(?i)[a-z]{1}[0-9]{2}\.[0-9A-Z]{24}\.[0-9A-Z]{64})
  $SEC101/043.NuGetPackageSourceCredentialsXml=(?i)(?<host><\s*packageSources\s*>(?s).{0,500}?(?-s)<\\?\/packageSources\s*>)(?s).{0,200}?(?-s)[^\/](?<secret><\s*packageSourceCredentials\s*>(?s).{0,500}?(?-s)<\\?\/packageSourceCredentials\s*>)
  $SEC101/102.AdoPat=\b(?<secret>[2-7a-z]{52})(\b|$)
  